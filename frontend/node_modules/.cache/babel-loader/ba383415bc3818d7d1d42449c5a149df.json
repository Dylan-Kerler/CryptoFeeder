{"ast":null,"code":"import _slicedToArray from\"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import settingsStore,{settingsActions}from\"./Store/Settings\";var Slider=function Slider(props){var _useState=useState(props.defaultValue),_useState2=_slicedToArray(_useState,2),sliderValue=_useState2[0],setSliderValue=_useState2[1];var handleSliderChange=function handleSliderChange(event){setSliderValue(event.target.value);};// Initialise/Update the settings store every time sliderValue changes\nuseEffect(function(){settingsStore.dispatch({type:props.setttingsType,data:sliderValue});},[sliderValue]);var titleText=function(){switch(props.dataType){case\"volume\":return\"Minimum volume\";case\"price\":return\"Minimum price increase\";case\"liquidity\":return\"Minimum order size\";default:return\"Error! Invalid datatype, got '\".concat(props.dataType,\"'\");}}();return React.createElement(\"div\",{id:\"min_\".concat(props.dataType,\"_slider_div\")},React.createElement(\"h2\",null,titleText,\": \",React.createElement(\"b\",{style:{color:\"grey\"}},sliderValue)),React.createElement(\"input\",{type:\"range\",min:\"0\",max:props.max,step:props.step,id:\"test\",onChange:handleSliderChange,value:sliderValue}),React.createElement(\"div\",null,React.createElement(\"strong\",{className:\"min_value\"},\"\".concat(props.minText)),React.createElement(\"strong\",{className:\"max_value\"},\"\".concat(props.maxText))));};var Sliders=function Sliders(){return React.createElement(React.Fragment,null,React.createElement(Slider,{dataType:\"volume\",setttingsType:settingsActions.UPDATE_MIN_VOLUME,max:\"1000000\",step:\"1\",minText:\"$0\",maxText:\"$1,000,000\",defaultValue:\"0\"}),React.createElement(Slider,{dataType:\"price\",setttingsType:settingsActions.UPDATE_MIN_PRICE_INCREASE,max:\"50\",step:\"1\",minText:\"0%\",maxText:\"50%\",defaultValue:\"0\"}),React.createElement(Slider,{dataType:\"liquidity\",setttingsType:settingsActions.UPDATE_MIN_ORDER_SIZE,max:\"3000000\",step:\"1\",minText:\"$0\",maxText:\"$3,000,000\",defaultValue:\"0\"}));};export default Sliders;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/src/ReactComponents/Sliders.js"],"names":["React","useState","useEffect","settingsStore","settingsActions","Slider","props","defaultValue","sliderValue","setSliderValue","handleSliderChange","event","target","value","dispatch","type","setttingsType","data","titleText","dataType","color","max","step","minText","maxText","Sliders","UPDATE_MIN_VOLUME","UPDATE_MIN_PRICE_INCREASE","UPDATE_MIN_ORDER_SIZE"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,aAAP,EAAuBC,eAAvB,KAA6C,kBAA7C,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,eACgBL,QAAQ,CAACK,KAAK,CAACC,YAAP,CADxB,wCACfC,WADe,eACFC,cADE,eAGtB,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAClCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACH,CAFD,CAIA;AACAX,SAAS,CAAC,UAAM,CACZC,aAAa,CAACW,QAAd,CAAuB,CAACC,IAAI,CAAET,KAAK,CAACU,aAAb,CAA4BC,IAAI,CAAET,WAAlC,CAAvB,EACH,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,GAAMU,CAAAA,SAAS,CAAI,UAAM,CACrB,OAAQZ,KAAK,CAACa,QAAd,EACI,IAAK,QAAL,CACI,MAAO,gBAAP,CACJ,IAAK,OAAL,CACI,MAAO,wBAAP,CACJ,IAAK,WAAL,CACI,MAAO,oBAAP,CACJ,QACI,8CAAwCb,KAAK,CAACa,QAA9C,MARR,CAUH,CAXiB,EAAlB,CAaA,MACI,4BAAK,EAAE,eAASb,KAAK,CAACa,QAAf,eAAP,EACI,8BAAKD,SAAL,MAAiB,yBAAG,KAAK,CAAE,CAACE,KAAK,CAAE,MAAR,CAAV,EAA4BZ,WAA5B,CAAjB,CADJ,CAEI,6BAAO,IAAI,CAAC,OAAZ,CAAoB,GAAG,CAAE,GAAzB,CAA8B,GAAG,CAAEF,KAAK,CAACe,GAAzC,CAA8C,IAAI,CAAEf,KAAK,CAACgB,IAA1D,CAAgE,EAAE,CAAC,MAAnE,CAA0E,QAAQ,CAAEZ,kBAApF,CAAwG,KAAK,CAAEF,WAA/G,EAFJ,CAGI,+BACI,8BAAQ,SAAS,CAAC,WAAlB,YAAkCF,KAAK,CAACiB,OAAxC,EADJ,CAEI,8BAAQ,SAAS,CAAC,WAAlB,YAAkCjB,KAAK,CAACkB,OAAxC,EAFJ,CAHJ,CADJ,CAUH,CAnCD,CAqCA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,oBAAC,MAAD,EAAQ,QAAQ,CAAE,QAAlB,CAA4B,aAAa,CAAErB,eAAe,CAACsB,iBAA3D,CACQ,GAAG,CAAE,SADb,CACwB,IAAI,CAAE,GAD9B,CACoC,OAAO,CAAE,IAD7C,CACmD,OAAO,CAAE,YAD5D,CAC0E,YAAY,CAAE,GADxF,EADJ,CAGI,oBAAC,MAAD,EAAQ,QAAQ,CAAE,OAAlB,CAA2B,aAAa,CAAEtB,eAAe,CAACuB,yBAA1D,CACQ,GAAG,CAAE,IADb,CACmB,IAAI,CAAE,GADzB,CAC8B,OAAO,CAAE,IADvC,CAC6C,OAAO,CAAE,KADtD,CAC6D,YAAY,CAAE,GAD3E,EAHJ,CAKI,oBAAC,MAAD,EAAQ,QAAQ,CAAE,WAAlB,CAA+B,aAAa,CAAEvB,eAAe,CAACwB,qBAA9D,CACQ,GAAG,CAAE,SADb,CACwB,IAAI,CAAE,GAD9B,CACmC,OAAO,CAAE,IAD5C,CACkD,OAAO,CAAE,YAD3D,CACyE,YAAY,CAAE,GADvF,EALJ,CADJ,CAWH,CAZD,CAcA,cAAeH,CAAAA,OAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport settingsStore, {settingsActions} from \"./Store/Settings\";\n\nconst Slider = (props) => {\n    const [sliderValue, setSliderValue] = useState(props.defaultValue);\n\n    const handleSliderChange = (event) => {\n        setSliderValue(event.target.value);\n    };\n\n    // Initialise/Update the settings store every time sliderValue changes\n    useEffect(() => {\n        settingsStore.dispatch({type: props.setttingsType, data: sliderValue});\n    }, [sliderValue]);\n\n    const titleText = (() => {\n        switch (props.dataType) {\n            case \"volume\":\n                return \"Minimum volume\";\n            case \"price\":\n                return \"Minimum price increase\";\n            case \"liquidity\":\n                return \"Minimum order size\";\n            default:\n                return `Error! Invalid datatype, got '${props.dataType}'`;\n        }\n    })();\n\n    return (\n        <div id={`min_${props.dataType}_slider_div`}>\n            <h2>{titleText}: <b style={{color: \"grey\"}}>{sliderValue}</b></h2>\n            <input type=\"range\" min={\"0\"} max={props.max} step={props.step} id=\"test\" onChange={handleSliderChange} value={sliderValue}/>\n            <div>\n                <strong className=\"min_value\">{`${props.minText}`}</strong>\n                <strong className=\"max_value\">{`${props.maxText}`}</strong>\n            </div>\n        </div>\n    )\n};\n\nconst Sliders = () => {\n    return (\n        <React.Fragment>\n            <Slider dataType={\"volume\"} setttingsType={settingsActions.UPDATE_MIN_VOLUME}\n                    max={\"1000000\"} step={\"1\"}  minText={\"$0\"} maxText={\"$1,000,000\"} defaultValue={\"0\"}/>\n            <Slider dataType={\"price\"} setttingsType={settingsActions.UPDATE_MIN_PRICE_INCREASE}\n                    max={\"50\"} step={\"1\"} minText={\"0%\"} maxText={\"50%\"} defaultValue={\"0\"}/>\n            <Slider dataType={\"liquidity\"} setttingsType={settingsActions.UPDATE_MIN_ORDER_SIZE}\n                    max={\"3000000\"} step={\"1\"} minText={\"$0\"} maxText={\"$3,000,000\"} defaultValue={\"0\"}/>\n        </React.Fragment>\n\n    )\n};\n\nexport default Sliders;"]},"metadata":{},"sourceType":"module"}