{"ast":null,"code":"import React,{useContext,useEffect,useState}from\"react\";import{PriceContext,SettingsContext,TimeContext}from\"./Contexts\";var ParsedText=function ParsedText(_ref){var anomaly=_ref.anomaly,dataType=_ref.dataType;var element=\"\";var settings=useContext(SettingsContext);var price=useContext(PriceContext);var timePassed=Math.abs(useContext(TimeContext)-anomaly.data.timestamp*1000);var movingTimeString=timePassed>120*1000?timePassed>60*1000*60?\"\":\"(\"+Math.floor(timePassed/1000/60)+\" minutes ago)\":\"(\"+Math.floor(timePassed/1000)+\" seconds ago)\";var anomalyTimeRange=anomaly.data.timestamp*1000-anomaly.data.limitTimestamp;var anomalyTimeRangeString=anomalyTimeRange>120*1000?Math.abs(Math.floor(anomalyTimeRange/1000/60))+\" minutes \":Math.abs(Math.floor(anomalyTimeRange/1000))+\" seconds \";if(anomaly.coin===settings.coin||settings.coin===\"all\"){switch(anomaly.type){case\"volumeAnomaly\":if(anomaly.data.total*price>=settings.minVolume){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},\"$\",Intl.NumberFormat().format((anomaly.data.total*price).toFixed(2))+\" \",\" worth of \",anomaly.coin+\" \",\"was \",anomaly.data.isBuyVolume?\"bought \":\"sold \",\" on \",anomaly.exchange+\" \",\"in the past \",anomalyTimeRangeString,\" -\",\" \"+((anomaly.data.total/anomaly.data.hourlyMa200-1)*100).toFixed(2)+\"% \",\" higher than the 200 hourly average.\",movingTimeString);}break;case\"anomalyPriceRange\":if(anomaly.data.change*100>=settings.minPriceIncrease){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},anomaly.coin,\" just \",anomaly.data.positive?\"pumped \":\"dumped \",(anomaly.data.change*100).toFixed(2),\"% in the past \",anomalyTimeRangeString,\" -\",\" \"+((anomaly.data.range/anomaly.data.maRange-1)*100).toFixed(2)+\"%\",\" higher than the 200 hourly average\",\" \"+movingTimeString);}break;case\"OrderBookIncrease\":if(anomaly.data.total>=settings.minOrderSize){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},\"$\",Intl.NumberFormat().format((anomaly.data.total*price).toFixed(0)),\" \",anomaly.data.isBuySide?\"buy \":\"sell\",\" wall for \",anomaly.coin+\" \",\"appeared \",movingTimeString,\" on \",anomaly.exchange,\" - A \",((anomaly.data.total/anomaly.data.maTotal-1)*100).toFixed(2),\"% increase from the 200 hourly average\");}break;}}var enterClassName=anomaly.data.isBuySide||anomaly.data.isBuyVolume||anomaly.data.positive?\"enter_buy_data\":\"enter_sell_data\";return function(){return element?React.createElement(\"div\",{id:\"\".concat(dataType,\"_data_1\"),className:\"data_box \".concat(dataType,\"_box \").concat(enterClassName)},element,React.createElement(\"p\",{className:\"data_timestamp\"},new Date(anomaly.data.timestamp*1000).toGMTString())):React.createElement(React.Fragment,null);}();};export default ParsedText;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/src/ReactComponents/DataDisplay/ParsedText.js"],"names":["React","useContext","useEffect","useState","PriceContext","SettingsContext","TimeContext","ParsedText","anomaly","dataType","element","settings","price","timePassed","Math","abs","data","timestamp","movingTimeString","floor","anomalyTimeRange","limitTimestamp","anomalyTimeRangeString","coin","type","total","minVolume","Intl","NumberFormat","format","toFixed","isBuyVolume","exchange","hourlyMa200","change","minPriceIncrease","positive","range","maRange","minOrderSize","isBuySide","maTotal","enterClassName","Date","toGMTString"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {PriceContext, SettingsContext, TimeContext} from \"./Contexts\";\n\nconst ParsedText = ({anomaly, dataType}) => {\n    let element = \"\";\n    const settings = useContext(SettingsContext);\n    const price = useContext(PriceContext);\n    const timePassed = Math.abs(useContext(TimeContext) - anomaly.data.timestamp * 1000);\n    const movingTimeString = timePassed > 120 * 1000 ? timePassed > 60 * 1000 * 60 ? \"\"\n        : \"(\" + Math.floor(timePassed / 1000 / 60) + \" minutes ago)\"\n        : \"(\" + Math.floor(timePassed / 1000) + \" seconds ago)\";\n\n    const anomalyTimeRange = anomaly.data.timestamp * 1000 - anomaly.data.limitTimestamp;\n    const anomalyTimeRangeString = anomalyTimeRange > 120 * 1000 ? Math.abs(Math.floor(anomalyTimeRange / 1000 / 60)) + \" minutes \" : Math.abs(Math.floor(anomalyTimeRange / 1000)) + \" seconds \";\n\n    if (anomaly.coin === settings.coin || settings.coin === \"all\") {\n        switch (anomaly.type) {\n            case \"volumeAnomaly\":\n                if (anomaly.data.total * price >= settings.minVolume) {\n                    element = <p className={`${dataType}_text`}>\n                        ${Intl.NumberFormat().format((anomaly.data.total * price).toFixed(2)) + \" \"} worth of {anomaly.coin + \" \"}\n                        was {anomaly.data.isBuyVolume ? \"bought \" : \"sold \"} on {anomaly.exchange + \" \"}\n                        in the past {anomalyTimeRangeString} -\n                        {\" \" + ((anomaly.data.total / anomaly.data.hourlyMa200 - 1) * 100).toFixed(2) + \"% \"} higher than the 200 hourly average.\n                        {movingTimeString}\n                    </p>;\n                }\n                break;\n            case \"anomalyPriceRange\":\n                if (anomaly.data.change * 100 >= settings.minPriceIncrease) {\n                    element = <p className={`${dataType}_text`}>\n                        {anomaly.coin} just {anomaly.data.positive ? \"pumped \" : \"dumped \"}\n                        {(anomaly.data.change * 100).toFixed(2)}%\n                        in the past {anomalyTimeRangeString} -\n                        {\" \" + ((anomaly.data.range / anomaly.data.maRange - 1) * 100).toFixed(2) + \"%\"} higher than the 200 hourly average\n                        {\" \" + movingTimeString}\n                    </p>\n                }\n                break;\n\n            case \"OrderBookIncrease\":\n                if (anomaly.data.total >= settings.minOrderSize) {\n                    element = <p className={`${dataType}_text`}>\n                        ${Intl.NumberFormat().format((anomaly.data.total * price).toFixed(0))} {anomaly.data.isBuySide ? \"buy \" : \"sell\"} wall for {anomaly.coin + \" \"}\n                        appeared {movingTimeString} on {anomaly.exchange} - A {((anomaly.data.total / anomaly.data.maTotal - 1) * 100).toFixed(2)}% increase\n                        from the 200 hourly average\n                    </p>\n                }\n                break;\n        }\n    }\n\n    const enterClassName = anomaly.data.isBuySide || anomaly.data.isBuyVolume || anomaly.data.positive ? \"enter_buy_data\" : \"enter_sell_data\";\n\n    return (\n        (() =>\n                element ?\n                    <div id={`${dataType}_data_1`} className={`data_box ${dataType}_box ${enterClassName}`}>\n                        {element}\n                        <p className=\"data_timestamp\">{new Date(anomaly.data.timestamp * 1000).toGMTString()}</p>\n                    </div>\n                    :\n                    <React.Fragment/>\n        )()\n    );\n};\n\nexport default ParsedText;"]},"metadata":{},"sourceType":"module"}