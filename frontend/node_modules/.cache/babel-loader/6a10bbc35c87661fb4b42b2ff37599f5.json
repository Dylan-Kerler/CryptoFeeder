{"ast":null,"code":"import _slicedToArray from\"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import priceStore from\"./Store/Price\";var Header=function Header(){var _useState=useState(priceStore.getState()[\"BTCUSDT\"]),_useState2=_slicedToArray(_useState,2),btcPrice=_useState2[0],setBtcPrice=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isBuy=_useState4[0],setIsBuy=_useState4[1];useEffect(function(){priceStore.subscribe(function(){setBtcPrice(function(prevBtcPrice){var newBtcPrice=priceStore.getState()[\"BTCUSDT\"];setIsBuy(newBtcPrice>=prevBtcPrice);return newBtcPrice;});});},[]);var priceColour=isBuy?\"#26A83A\":\"red\";return React.createElement(React.Fragment,null,React.createElement(\"div\",{id:\"title_text_div\"},\" \",React.createElement(\"h3\",null,\"cryptofeeder.com\"),\" \"),React.createElement(\"div\",{id:\"login_signup_button_div\"},React.createElement(\"p\",{style:{color:\"white\"}},\"BTCUSDT: \",React.createElement(\"b\",{style:{color:priceColour}},\"$\",btcPrice))));};export default Header;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/Header.js"],"names":["React","useEffect","useState","priceStore","Header","getState","btcPrice","setBtcPrice","isBuy","setIsBuy","subscribe","prevBtcPrice","newBtcPrice","priceColour","color"],"mappings":"2IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,eACeF,QAAQ,CAACC,UAAU,CAACE,QAAX,GAAsB,SAAtB,CAAD,CADvB,wCACVC,QADU,eACAC,WADA,8BAESL,QAAQ,CAAC,IAAD,CAFjB,yCAEVM,KAFU,eAEHC,QAFG,eAGjBR,SAAS,CAAC,UAAM,CACZE,UAAU,CAACO,SAAX,CAAqB,UAAM,CACvBH,WAAW,CAAC,SAAAI,YAAY,CAAI,CACxB,GAAMC,CAAAA,WAAW,CAAGT,UAAU,CAACE,QAAX,GAAsB,SAAtB,CAApB,CACAI,QAAQ,CAACG,WAAW,EAAID,YAAhB,CAAR,CACA,MAAOC,CAAAA,WAAP,CACH,CAJU,CAAX,CAKH,CAND,EAOH,CARQ,CAQN,EARM,CAAT,CAUA,GAAMC,CAAAA,WAAW,CAAGL,KAAK,CAAG,SAAH,CAAe,KAAxC,CACA,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,2BAAK,EAAE,CAAC,gBAAR,MAA0B,iDAA1B,KADJ,CAEI,2BAAK,EAAE,CAAC,yBAAR,EACI,yBAAG,KAAK,CAAE,CAACM,KAAK,CAAE,OAAR,CAAV,cAAqC,yBAAG,KAAK,CAAE,CAACA,KAAK,CAAED,WAAR,CAAV,MAAkCP,QAAlC,CAArC,CADJ,CAFJ,CADJ,CAQH,CAtBD,CAwBA,cAAeF,CAAAA,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport priceStore from \"./Store/Price\";\n\nconst Header = () => {\n    const [btcPrice, setBtcPrice] = useState(priceStore.getState()[\"BTCUSDT\"]);\n    const [isBuy, setIsBuy] = useState(true);\n    useEffect(() => {\n        priceStore.subscribe(() => {\n            setBtcPrice(prevBtcPrice => {\n                const newBtcPrice = priceStore.getState()[\"BTCUSDT\"];\n                setIsBuy(newBtcPrice >= prevBtcPrice);\n                return newBtcPrice;\n            });\n        });\n    }, []);\n\n    const priceColour = isBuy ? \"#26A83A\" : \"red\";\n    return (\n        <React.Fragment>\n            <div id=\"title_text_div\"> <h3>cryptofeeder.com</h3> </div>\n            <div id=\"login_signup_button_div\">\n                <p style={{color: \"white\"}}>BTCUSDT: <b style={{color: priceColour}}>${btcPrice}</b></p>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}