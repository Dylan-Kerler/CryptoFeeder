{"ast":null,"code":"import _slicedToArray from\"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from\"react\";import{PriceContext,SettingsContext,TimeContext}from\"./Contexts\";var ParsedText=function ParsedText(_ref){var anomaly=_ref.anomaly,dataType=_ref.dataType;var element=\"\";var settings=useContext(SettingsContext);var price=useContext(PriceContext);var timePassed=useContext(TimeContext)-anomaly.data.timestamp*1000;var movingTimeString=timePassed>120*1000?timePassed>60*1000*60?\"\":\"(\"+Math.floor(timePassed/1000/60)+\" minutes ago)\":\"(\"+Math.floor(timePassed/1000)+\" seconds ago)\";var anomalyTimeRange=anomaly.data.timestamp*1000-anomaly.data.limitTimestamp;var anomalyTimeRangeString=anomalyTimeRange>120*1000?Math.floor(anomalyTimeRange/1000/60)+\" minutes \":Math.floor(anomalyTimeRange/1000)+\" seconds \";if(anomaly.coin===settings.coin||settings.coin===\"all\"){switch(anomaly.type){case\"volumeAnomaly\":if(anomaly.data.total*price>=settings.minVolume){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},\"$\",Intl.NumberFormat().format((anomaly.data.total*price).toFixed(2))+\" \",\" worth of \",anomaly.coin+\" \",\"was \",anomaly.data.isBuyVolume?\"bought \":\"sold \",\" on \",anomaly.exchange+\" \",\"in the past \",anomalyTimeRangeString,\" -\",\" \"+((anomaly.data.total/anomaly.data.hourlyMa200-1)*100).toFixed(2)+\"% \",\" higher than the 200 hourly average.\",movingTimeString);}break;case\"anomalyPriceRange\":if(anomaly.data.change*100>=settings.minPriceIncrease){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},anomaly.coin,\" just \",anomaly.data.positive?\"pumped \":\"dumped \",(anomaly.data.change*100).toFixed(2),\"% in the past \",anomalyTimeRangeString,\" -\",\" \"+((anomaly.data.range/anomaly.data.maRange-1)*100).toFixed(2)+\"%\",\" higher than the 200 hourly average\",\" \"+movingTimeString);}break;case\"OrderBookIncrease\":console.log(anomaly);if(anomaly.data.total>=settings.minOrderSize){element=React.createElement(\"p\",{className:\"\".concat(dataType,\"_text\")},\"$\",Intl.NumberFormat().format((anomaly.data.total*price).toFixed(0)),\" \",anomaly.data.isBuySide?\"buy \":\"sell\",\" wall for \",anomaly.coin+\" \",\"appeared \",movingTimeString,\" on \",anomaly.exchange,\" - A \",((anomaly.data.total/anomaly.data.maTotal-1)*100).toFixed(2),\"% increase from the 200 hourly average\");}break;}}var enterClassName=anomaly.data.isBuySide||anomaly.data.isBuyVolume||anomaly.data.positive?\"enter_buy_data\":\"enter_sell_data\";var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isFirstRender=_useState2[0],setIsFirstRender=_useState2[1];useEffect(function(){setIsFirstRender(false);},[]);return function(){return element?React.createElement(\"div\",{id:\"\".concat(dataType,\"_data_1\"),className:\"data_box \".concat(dataType,\"_box \").concat(isFirstRender?enterClassName:\"\")},element,React.createElement(\"p\",{className:\"data_timestamp\"},new Date(anomaly.data.timestamp*1000).toGMTString())):React.createElement(React.Fragment,null);}();};export default ParsedText;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/src/ReactComponents/DataDisplay/ParsedText.js"],"names":["React","useContext","useEffect","useState","PriceContext","SettingsContext","TimeContext","ParsedText","anomaly","dataType","element","settings","price","timePassed","data","timestamp","movingTimeString","Math","floor","anomalyTimeRange","limitTimestamp","anomalyTimeRangeString","coin","type","total","minVolume","Intl","NumberFormat","format","toFixed","isBuyVolume","exchange","hourlyMa200","change","minPriceIncrease","positive","range","maRange","console","log","minOrderSize","isBuySide","maTotal","enterClassName","isFirstRender","setIsFirstRender","Date","toGMTString"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {PriceContext, SettingsContext, TimeContext} from \"./Contexts\";\n\nconst ParsedText = ({anomaly, dataType}) => {\n    let element = \"\";\n    const settings = useContext(SettingsContext);\n    const price = useContext(PriceContext);\n    const timePassed = useContext(TimeContext) - anomaly.data.timestamp * 1000;\n    const movingTimeString = timePassed > 120 * 1000 ? timePassed > 60 * 1000 * 60 ? \"\"\n        : \"(\" + Math.floor(timePassed / 1000 / 60) + \" minutes ago)\"\n        : \"(\" + Math.floor(timePassed / 1000) + \" seconds ago)\";\n\n    const anomalyTimeRange = anomaly.data.timestamp * 1000 - anomaly.data.limitTimestamp;\n    const anomalyTimeRangeString = anomalyTimeRange > 120 * 1000 ? Math.floor(anomalyTimeRange / 1000 / 60) + \" minutes \" : Math.floor(anomalyTimeRange / 1000) + \" seconds \";\n\n    if (anomaly.coin === settings.coin || settings.coin === \"all\") {\n        switch (anomaly.type) {\n            case \"volumeAnomaly\":\n                if (anomaly.data.total * price >= settings.minVolume) {\n                    element = <p className={`${dataType}_text`}>\n                        ${Intl.NumberFormat().format((anomaly.data.total * price).toFixed(2)) + \" \"} worth of {anomaly.coin + \" \"}\n                        was {anomaly.data.isBuyVolume ? \"bought \" : \"sold \"} on {anomaly.exchange + \" \"}\n                        in the past {anomalyTimeRangeString} -\n                        {\" \" + ((anomaly.data.total / anomaly.data.hourlyMa200 - 1) * 100).toFixed(2) + \"% \"} higher than the 200 hourly average.\n                        {movingTimeString}\n                    </p>;\n                }\n                break;\n            case \"anomalyPriceRange\":\n                if (anomaly.data.change * 100 >= settings.minPriceIncrease) {\n                    element = <p className={`${dataType}_text`}>\n                        {anomaly.coin} just {anomaly.data.positive ? \"pumped \" : \"dumped \"}\n                        {(anomaly.data.change * 100).toFixed(2)}%\n                        in the past {anomalyTimeRangeString} -\n                        {\" \" + ((anomaly.data.range / anomaly.data.maRange - 1) * 100).toFixed(2) + \"%\"} higher than the 200 hourly average\n                        {\" \" + movingTimeString}\n                    </p>\n                }\n                break;\n\n            case \"OrderBookIncrease\":\n                console.log(anomaly)\n                if (anomaly.data.total >= settings.minOrderSize) {\n                    element = <p className={`${dataType}_text`}>\n                        ${Intl.NumberFormat().format((anomaly.data.total * price).toFixed(0))} {anomaly.data.isBuySide ? \"buy \" : \"sell\"} wall for {anomaly.coin + \" \"}\n                        appeared {movingTimeString} on {anomaly.exchange} - A {((anomaly.data.total / anomaly.data.maTotal - 1) * 100).toFixed(2)}% increase\n                        from the 200 hourly average\n                    </p>\n                }\n                break;\n        }\n    }\n\n    const enterClassName = anomaly.data.isBuySide || anomaly.data.isBuyVolume || anomaly.data.positive ? \"enter_buy_data\" : \"enter_sell_data\";\n    const [isFirstRender, setIsFirstRender] = useState(true);\n    useEffect(() => {\n        setIsFirstRender(false);\n    }, []);\n\n    return (\n        (() =>\n                element ?\n                    <div id={`${dataType}_data_1`} className={`data_box ${dataType}_box ${isFirstRender ? enterClassName : \"\"}`}>\n                        {element}\n                        <p className=\"data_timestamp\">{new Date(anomaly.data.timestamp * 1000).toGMTString()}</p>\n                    </div>\n                    :\n                    <React.Fragment/>\n        )()\n    );\n};\n\nexport default ParsedText;"]},"metadata":{},"sourceType":"module"}