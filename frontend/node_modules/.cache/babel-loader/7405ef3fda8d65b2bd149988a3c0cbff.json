{"ast":null,"code":"import _objectSpread from \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createStore } from \"redux\";\nconst settingsActions = {\n  UPDATE_MIN_VOLUME: \"UPDATE_MIN_VOLUME\",\n  UPDATE_MIN_PRICE_INCREASE: \"UPDATE_MIN_PRICE_INCREASE\",\n  UPDATE_MIN_ORDER_SIZE: \"UPDATE_MIN_ORDER_SIZE\",\n  UPDATE_COIN: \"UPDATE_COIN\"\n};\n\nconst settingsReducer = (state, action) => {\n  const newState = _objectSpread({}, state); // Cannot mutate the current state, must be a copy\n\n\n  switch (action.type) {\n    case settingsActions.UPDATE_MIN_VOLUME:\n      newState.minVolume = action.data;\n      break;\n\n    case settingsActions.UPDATE_MIN_PRICE_INCREASE:\n      newState.minPriceIncrease = action.data;\n      break;\n\n    case settingsActions.UPDATE_MIN_ORDER_SIZE:\n      newState.minOrderSize = action.data;\n      break;\n\n    case settingsActions.UPDATE_COIN:\n      newState.coin = action.coin;\n      break;\n\n    default:\n      console.log(\"ERROR! '\", action.type, \"' is not an action\");\n      break;\n  }\n\n  return newState;\n};\n\nconst initialState = {\n  minVolume: 0,\n  minPriceIncrease: 0,\n  minOrderSize: 0,\n  coin: \"all\"\n};\nconst settingsStore = createStore(settingsReducer, initialState);\nexport default settingsStore;\nexport { settingsActions };","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/src/ReactComponents/Store/Settings.js"],"names":["createStore","settingsActions","UPDATE_MIN_VOLUME","UPDATE_MIN_PRICE_INCREASE","UPDATE_MIN_ORDER_SIZE","UPDATE_COIN","settingsReducer","state","action","newState","type","minVolume","data","minPriceIncrease","minOrderSize","coin","console","log","initialState","settingsStore"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,iBAAiB,EAAE,mBADC;AAEpBC,EAAAA,yBAAyB,EAAE,2BAFP;AAGpBC,EAAAA,qBAAqB,EAAE,uBAHH;AAIpBC,EAAAA,WAAW,EAAE;AAJO,CAAxB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,QAAMC,QAAQ,qBAAOF,KAAP,CAAd,CADuC,CACV;;;AAC7B,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKT,eAAe,CAACC,iBAArB;AACIO,MAAAA,QAAQ,CAACE,SAAT,GAAqBH,MAAM,CAACI,IAA5B;AACA;;AACJ,SAAKX,eAAe,CAACE,yBAArB;AACIM,MAAAA,QAAQ,CAACI,gBAAT,GAA4BL,MAAM,CAACI,IAAnC;AACA;;AACJ,SAAKX,eAAe,CAACG,qBAArB;AACIK,MAAAA,QAAQ,CAACK,YAAT,GAAwBN,MAAM,CAACI,IAA/B;AACA;;AACJ,SAAKX,eAAe,CAACI,WAArB;AACII,MAAAA,QAAQ,CAACM,IAAT,GAAgBP,MAAM,CAACO,IAAvB;AACA;;AACJ;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,MAAM,CAACE,IAA/B,EAAqC,oBAArC;AACA;AAfR;;AAkBA,SAAOD,QAAP;AACH,CArBD;;AAuBA,MAAMS,YAAY,GAAG;AACjBP,EAAAA,SAAS,EAAE,CADM;AAEjBE,EAAAA,gBAAgB,EAAE,CAFD;AAGjBC,EAAAA,YAAY,EAAE,CAHG;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,MAAMI,aAAa,GAAGnB,WAAW,CAACM,eAAD,EAAkBY,YAAlB,CAAjC;AAEA,eAAeC,aAAf;AACA,SAAQlB,eAAR","sourcesContent":["import { createStore } from \"redux\";\n\nconst settingsActions = {\n    UPDATE_MIN_VOLUME: \"UPDATE_MIN_VOLUME\",\n    UPDATE_MIN_PRICE_INCREASE: \"UPDATE_MIN_PRICE_INCREASE\",\n    UPDATE_MIN_ORDER_SIZE: \"UPDATE_MIN_ORDER_SIZE\",\n    UPDATE_COIN: \"UPDATE_COIN\",\n};\n\nconst settingsReducer = (state, action) => {\n    const newState = {...state}; // Cannot mutate the current state, must be a copy\n    switch (action.type) {\n        case settingsActions.UPDATE_MIN_VOLUME:\n            newState.minVolume = action.data;\n            break;\n        case settingsActions.UPDATE_MIN_PRICE_INCREASE:\n            newState.minPriceIncrease = action.data;\n            break;\n        case settingsActions.UPDATE_MIN_ORDER_SIZE:\n            newState.minOrderSize = action.data;\n            break;\n        case settingsActions.UPDATE_COIN:\n            newState.coin = action.coin;\n            break;\n        default:\n            console.log(\"ERROR! '\", action.type, \"' is not an action\");\n            break;\n    }\n\n    return newState;\n};\n\nconst initialState = {\n    minVolume: 0,\n    minPriceIncrease: 0,\n    minOrderSize: 0,\n    coin: \"all\"\n};\n\nconst settingsStore = createStore(settingsReducer, initialState);\n\nexport default settingsStore;\nexport {settingsActions};"]},"metadata":{},"sourceType":"module"}