{"ast":null,"code":"import _objectSpread from \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createStore } from \"redux\";\nimport Binance from \"binance-api-node\";\nconst priceActions = {\n  UPDATE_PRICE: \"UPDATE_PRICE\"\n};\n\nconst priceReducer = (state, action) => {\n  const newState = _objectSpread({}, state); //shallow copy is sufficient here\n\n\n  switch (action.type) {\n    case priceActions.UPDATE_PRICE:\n      newState[action.pair] = action.price.toFixed(3);\n      break;\n\n    default:\n      console.log(\"Invalid action type for priceReducer, got: \", action.type);\n      break;\n  }\n};\n\nconst client = Binance();\nclient.ws.ticker(\"BTCUSDT\", ticker => {\n  console.log(ticker);\n});\nconst priceStore = createStore(priceReducer);\nexport default priceStore;\nexport { priceReducer };","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/Store/Price.js"],"names":["createStore","Binance","priceActions","UPDATE_PRICE","priceReducer","state","action","newState","type","pair","price","toFixed","console","log","client","ws","ticker","priceStore"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AADG,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,QAAMC,QAAQ,qBAAOF,KAAP,CAAd,CADoC,CACP;;;AAC7B,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKN,YAAY,CAACC,YAAlB;AACII,MAAAA,QAAQ,CAACD,MAAM,CAACG,IAAR,CAAR,GAAwBH,MAAM,CAACI,KAAP,CAAaC,OAAb,CAAqB,CAArB,CAAxB;AACA;;AACJ;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DP,MAAM,CAACE,IAAlE;AACA;AANR;AAQH,CAVD;;AAYA,MAAMM,MAAM,GAAGb,OAAO,EAAtB;AACAa,MAAM,CAACC,EAAP,CAAUC,MAAV,CAAiB,SAAjB,EAA4BA,MAAM,IAAI;AAClCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACH,CAFD;AAIA,MAAMC,UAAU,GAAGjB,WAAW,CAACI,YAAD,CAA9B;AACA,eAAea,UAAf;AACA,SAASb,YAAT","sourcesContent":["import { createStore } from \"redux\";\nimport Binance from \"binance-api-node\";\n\nconst priceActions = {\n    UPDATE_PRICE: \"UPDATE_PRICE\",\n}\n\nconst priceReducer = (state, action) => {\n    const newState = {...state}; //shallow copy is sufficient here\n    switch (action.type) {\n        case priceActions.UPDATE_PRICE:\n            newState[action.pair] = action.price.toFixed(3);\n            break;\n        default:\n            console.log(\"Invalid action type for priceReducer, got: \", action.type);\n            break;\n    }\n};\n\nconst client = Binance();\nclient.ws.ticker(\"BTCUSDT\", ticker => {\n    console.log(ticker);\n});\n\nconst priceStore = createStore(priceReducer);\nexport default priceStore;\nexport { priceReducer };"]},"metadata":{},"sourceType":"module"}