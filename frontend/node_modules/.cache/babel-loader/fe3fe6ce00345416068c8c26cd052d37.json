{"ast":null,"code":"import _objectSpread from\"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore}from\"redux\";var settingsActions={UPDATE_MIN_VOLUME:\"UPDATE_MIN_VOLUME\",UPDATE_MIN_PRICE_INCREASE:\"UPDATE_MIN_PRICE_INCREASE\",UPDATE_MIN_ORDER_SIZE:\"UPDATE_MIN_ORDER_SIZE\",UPDATE_COIN:\"UPDATE_COIN\"};var settingsReducer=function settingsReducer(state,action){var newState=_objectSpread({},state);// Cannot mutate the current state, must be a copy\nswitch(action.type){case settingsActions.UPDATE_MIN_VOLUME:newState.minVolume=action.data;break;case settingsActions.UPDATE_MIN_PRICE_INCREASE:newState.minPriceIncrease=action.data;break;case settingsActions.UPDATE_MIN_ORDER_SIZE:newState.minOrderSize=action.data;break;case settingsActions.UPDATE_COIN:newState.coin=action.coin;break;default:console.log(\"ERROR! '\",action.type,\"' is not an action\");break;}return newState;};var initialState={minVolume:0,minPriceIncrease:0,minOrderSize:0,coin:\"all\"};var settingsStore=createStore(settingsReducer,initialState);export default settingsStore;export{settingsActions};","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/Store/Settings.js"],"names":["createStore","settingsActions","UPDATE_MIN_VOLUME","UPDATE_MIN_PRICE_INCREASE","UPDATE_MIN_ORDER_SIZE","UPDATE_COIN","settingsReducer","state","action","newState","type","minVolume","data","minPriceIncrease","minOrderSize","coin","console","log","initialState","settingsStore"],"mappings":"0IAAA,OAASA,WAAT,KAA4B,OAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,iBAAiB,CAAE,mBADC,CAEpBC,yBAAyB,CAAE,2BAFP,CAGpBC,qBAAqB,CAAE,uBAHH,CAIpBC,WAAW,CAAE,aAJO,CAAxB,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACvC,GAAMC,CAAAA,QAAQ,kBAAOF,KAAP,CAAd,CAA6B;AAC7B,OAAQC,MAAM,CAACE,IAAf,EACI,IAAKT,CAAAA,eAAe,CAACC,iBAArB,CACIO,QAAQ,CAACE,SAAT,CAAqBH,MAAM,CAACI,IAA5B,CACA,MACJ,IAAKX,CAAAA,eAAe,CAACE,yBAArB,CACIM,QAAQ,CAACI,gBAAT,CAA4BL,MAAM,CAACI,IAAnC,CACA,MACJ,IAAKX,CAAAA,eAAe,CAACG,qBAArB,CACIK,QAAQ,CAACK,YAAT,CAAwBN,MAAM,CAACI,IAA/B,CACA,MACJ,IAAKX,CAAAA,eAAe,CAACI,WAArB,CACII,QAAQ,CAACM,IAAT,CAAgBP,MAAM,CAACO,IAAvB,CACA,MACJ,QACIC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBT,MAAM,CAACE,IAA/B,CAAqC,oBAArC,EACA,MAfR,CAkBA,MAAOD,CAAAA,QAAP,CACH,CArBD,CAuBA,GAAMS,CAAAA,YAAY,CAAG,CACjBP,SAAS,CAAE,CADM,CAEjBE,gBAAgB,CAAE,CAFD,CAGjBC,YAAY,CAAE,CAHG,CAIjBC,IAAI,CAAE,KAJW,CAArB,CAOA,GAAMI,CAAAA,aAAa,CAAGnB,WAAW,CAACM,eAAD,CAAkBY,YAAlB,CAAjC,CAEA,cAAeC,CAAAA,aAAf,CACA,OAAQlB,eAAR","sourcesContent":["import { createStore } from \"redux\";\n\nconst settingsActions = {\n    UPDATE_MIN_VOLUME: \"UPDATE_MIN_VOLUME\",\n    UPDATE_MIN_PRICE_INCREASE: \"UPDATE_MIN_PRICE_INCREASE\",\n    UPDATE_MIN_ORDER_SIZE: \"UPDATE_MIN_ORDER_SIZE\",\n    UPDATE_COIN: \"UPDATE_COIN\",\n};\n\nconst settingsReducer = (state, action) => {\n    const newState = {...state}; // Cannot mutate the current state, must be a copy\n    switch (action.type) {\n        case settingsActions.UPDATE_MIN_VOLUME:\n            newState.minVolume = action.data;\n            break;\n        case settingsActions.UPDATE_MIN_PRICE_INCREASE:\n            newState.minPriceIncrease = action.data;\n            break;\n        case settingsActions.UPDATE_MIN_ORDER_SIZE:\n            newState.minOrderSize = action.data;\n            break;\n        case settingsActions.UPDATE_COIN:\n            newState.coin = action.coin;\n            break;\n        default:\n            console.log(\"ERROR! '\", action.type, \"' is not an action\");\n            break;\n    }\n\n    return newState;\n};\n\nconst initialState = {\n    minVolume: 0,\n    minPriceIncrease: 0,\n    minOrderSize: 0,\n    coin: \"all\"\n};\n\nconst settingsStore = createStore(settingsReducer, initialState);\n\nexport default settingsStore;\nexport {settingsActions};"]},"metadata":{},"sourceType":"module"}