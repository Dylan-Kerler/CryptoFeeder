{"ast":null,"code":"const request = require('request');\n\nconst qs = require('querystring');\n\nconst _ = require('underscore');\n\nconst crypto = require('crypto');\n\nconst Beautifier = require('./beautifier.js');\n\nconst assert = require('assert');\n\nclass BinanceRest {\n  constructor({\n    key,\n    secret,\n    recvWindow = false,\n    timeout = 15000,\n    disableBeautification = false,\n    handleDrift = false\n  }) {\n    this.key = key;\n    this.secret = secret;\n    this.recvWindow = recvWindow;\n    this.timeout = timeout;\n    this.disableBeautification = disableBeautification;\n    this.handleDrift = handleDrift;\n    this._beautifier = new Beautifier();\n    this._baseUrl = 'https://api.binance.com/';\n    this._drift = 0;\n    this._syncInterval = 0;\n  }\n\n  _makeRequest(query, callback, route, security, method, attempt = 0) {\n    assert(_.isUndefined(callback) || _.isFunction(callback), 'callback must be a function or undefined');\n    assert(_.isObject(query), 'query must be an object');\n    let queryString;\n\n    const type = _.last(route.split('/')),\n          options = {\n      url: `${this._baseUrl}${route}`,\n      timeout: this.timeout\n    };\n\n    if (security === 'SIGNED') {\n      if (this.recvWindow) {\n        query.recvWindow = this.recvWindow;\n      }\n\n      queryString = qs.stringify(query);\n      options.url += '?' + queryString;\n\n      if (options.url.substr(options.url.length - 1) !== '?') {\n        options.url += '&';\n      }\n\n      options.url += `signature=${this._sign(queryString)}`;\n    } else {\n      queryString = qs.stringify(query);\n\n      if (queryString) {\n        options.url += '?' + queryString;\n      }\n    }\n\n    if (security === 'API-KEY' || security === 'SIGNED') {\n      options.headers = {\n        'X-MBX-APIKEY': this.key\n      };\n    }\n\n    if (method) {\n      options.method = method;\n    }\n\n    if (callback) {\n      request(options, (err, response, body) => {\n        let payload;\n\n        try {\n          payload = JSON.parse(body);\n        } catch (e) {\n          payload = body;\n        }\n\n        if (err) {\n          callback(err, payload);\n        } else if (response.statusCode < 200 || response.statusCode > 299) {\n          /*\r\n           * If we get a response that the timestamp is ahead of the server,\r\n           * calculate the drift and then attempt the request again\r\n           */\n          if (response.statusCode === 400 && payload.code === -1021 && this.handleDrift && attempt === 0) {\n            this.calculateDrift().then(() => {\n              query.timestamp = this._getTime() + this._drift;\n              return this._makeRequest(query, callback, route, security, method, ++attempt);\n            });\n          } else {\n            callback(new Error(`Response code ${response.statusCode}`), payload);\n          }\n        } else {\n          if (_.isArray(payload)) {\n            payload = _.map(payload, item => {\n              return this._doBeautifications(item, type);\n            });\n          } else {\n            payload = this._doBeautifications(payload);\n          }\n\n          callback(err, payload);\n        }\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        request(options, (err, response, body) => {\n          let payload;\n\n          if (err) {\n            reject(err);\n          } else {\n            try {\n              payload = JSON.parse(body);\n            } catch (e) {\n              payload = body;\n            }\n\n            if (response.statusCode < 200 || response.statusCode > 299) {\n              /*\r\n               * If we get a response that the timestamp is ahead of the server,\r\n               * calculate the drift and then attempt the request again\r\n               */\n              if (response.statusCode === 400 && payload.code === -1021 && this.handleDrift && attempt === 0) {\n                this.calculateDrift().then(() => {\n                  query.timestamp = this._getTime() + this._drift;\n                  return this._makeRequest(query, callback, route, security, method, ++attempt);\n                }).then(retryPayload => {\n                  resolve(retryPayload);\n                }).catch(retryErr => {\n                  reject(retryErr);\n                });\n              } else {\n                reject(payload);\n              }\n            } else {\n              if (_.isArray(payload)) {\n                payload = _.map(payload, item => {\n                  return this._doBeautifications(item, type);\n                });\n              } else {\n                payload = this._doBeautifications(payload);\n              }\n\n              resolve(payload);\n            }\n          }\n        });\n      });\n    }\n  }\n\n  _doBeautifications(response, route) {\n    if (this.disableBeautification) {\n      return response;\n    }\n\n    return this._beautifier.beautify(response, route);\n  }\n\n  _sign(queryString) {\n    return crypto.createHmac('sha256', this.secret).update(queryString).digest('hex');\n  }\n\n  _setTimestamp(query) {\n    if (!query.timestamp) {\n      query.timestamp = this._getTime() + this._drift;\n    }\n  }\n\n  _getTime() {\n    return new Date().getTime();\n  }\n\n  calculateDrift() {\n    const systemTime = this._getTime();\n\n    return this.time().then(response => {\n      // Calculate the approximate trip time from here to binance\n      const transitTime = parseInt((this._getTime() - systemTime) / 2);\n      this._drift = response.serverTime - (systemTime + transitTime);\n    });\n  }\n\n  startTimeSync(interval = 300000) {\n    // If there's already an interval running, clear it and reset values\n    if (this._syncInterval !== 0) {\n      this.endTimeSync();\n    } // Calculate initial drift value and setup interval to periodically update it\n\n\n    this.calculateDrift();\n    this._syncInterval = setInterval(() => {\n      this.calculateDrift();\n    }, interval);\n  }\n\n  endTimeSync() {\n    clearInterval(this._syncInterval);\n    this._drift = 0;\n    this._syncInterval = 0;\n  } // Public APIs\n\n\n  ping(callback) {\n    return this._makeRequest({}, callback, 'api/v1/ping');\n  }\n\n  time(callback) {\n    return this._makeRequest({}, callback, 'api/v1/time');\n  }\n\n  depth(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v1/depth');\n  }\n\n  trades(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v1/trades');\n  }\n\n  historicalTrades(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v1/historicalTrades', 'API-KEY');\n  }\n\n  aggTrades(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v1/aggTrades');\n  }\n\n  exchangeInfo(callback) {\n    return this._makeRequest({}, callback, 'api/v1/exchangeInfo');\n  }\n\n  klines(query = {}, callback) {\n    return this._makeRequest(query, callback, 'api/v1/klines');\n  }\n\n  ticker24hr(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v1/ticker/24hr');\n  }\n\n  tickerPrice(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v3/ticker/price');\n  }\n\n  bookTicker(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    return this._makeRequest(query, callback, 'api/v3/ticker/bookTicker');\n  }\n\n  allBookTickers(callback) {\n    return this._makeRequest({}, callback, 'api/v1/ticker/allBookTickers');\n  }\n\n  allPrices(callback) {\n    return this._makeRequest({}, callback, 'api/v1/ticker/allPrices');\n  } // Private APIs\n\n\n  newOrder(query = {}, callback) {\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED', 'POST');\n  }\n\n  testOrder(query = {}, callback) {\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/order/test', 'SIGNED', 'POST');\n  }\n\n  queryOrder(query = {}, callback) {\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED');\n  }\n\n  cancelOrder(query = {}, callback) {\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED', 'DELETE');\n  }\n\n  openOrders(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/openOrders', 'SIGNED');\n  }\n\n  allOrders(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/allOrders', 'SIGNED');\n  }\n\n  account(query = {}, callback) {\n    if (_.isFunction(query)) {\n      callback = query;\n      query = {};\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/account', 'SIGNED');\n  }\n\n  myTrades(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        symbol: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'api/v3/myTrades', 'SIGNED');\n  }\n\n  withdraw(query = {}, callback) {\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'wapi/v3/withdraw.html', 'SIGNED', 'POST');\n  }\n\n  depositHistory(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        asset: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'wapi/v3/depositHistory.html', 'SIGNED');\n  }\n\n  withdrawHistory(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        asset: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'wapi/v3/withdrawHistory.html', 'SIGNED');\n  }\n\n  depositAddress(query = {}, callback) {\n    if (_.isString(query)) {\n      query = {\n        asset: query\n      };\n    }\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'wapi/v3/depositAddress.html', 'SIGNED');\n  }\n\n  accountStatus(callback) {\n    const query = {};\n\n    this._setTimestamp(query);\n\n    return this._makeRequest(query, callback, 'wapi/v3/accountStatus.html', 'SIGNED');\n  }\n\n  startUserDataStream(callback) {\n    return this._makeRequest({}, callback, 'api/v1/userDataStream', 'API-KEY', 'POST');\n  }\n\n  keepAliveUserDataStream(query = {}, callback) {\n    return this._makeRequest(query, callback, 'api/v1/userDataStream', 'API-KEY', 'PUT');\n  }\n\n  closeUserDataStream(query = {}, callback) {\n    return this._makeRequest(query, callback, 'api/v1/userDataStream', 'API-KEY', 'DELETE');\n  }\n\n}\n\nmodule.exports = BinanceRest;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/binance/lib/rest.js"],"names":["request","require","qs","_","crypto","Beautifier","assert","BinanceRest","constructor","key","secret","recvWindow","timeout","disableBeautification","handleDrift","_beautifier","_baseUrl","_drift","_syncInterval","_makeRequest","query","callback","route","security","method","attempt","isUndefined","isFunction","isObject","queryString","type","last","split","options","url","stringify","substr","length","_sign","headers","err","response","body","payload","JSON","parse","e","statusCode","code","calculateDrift","then","timestamp","_getTime","Error","isArray","map","item","_doBeautifications","Promise","resolve","reject","retryPayload","catch","retryErr","beautify","createHmac","update","digest","_setTimestamp","Date","getTime","systemTime","time","transitTime","parseInt","serverTime","startTimeSync","interval","endTimeSync","setInterval","clearInterval","ping","depth","isString","symbol","trades","historicalTrades","aggTrades","exchangeInfo","klines","ticker24hr","tickerPrice","bookTicker","allBookTickers","allPrices","newOrder","testOrder","queryOrder","cancelOrder","openOrders","allOrders","account","myTrades","withdraw","depositHistory","asset","withdrawHistory","depositAddress","accountStatus","startUserDataStream","keepAliveUserDataStream","closeUserDataStream","module","exports"],"mappings":"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","sourcesContent":["const request = require('request');\r\nconst qs = require('querystring');\r\nconst _ = require('underscore');\r\nconst crypto = require('crypto');\r\nconst Beautifier = require('./beautifier.js');\r\nconst assert = require('assert');\r\n\r\nclass BinanceRest {\r\n\r\n    constructor({\r\n        key,\r\n        secret,\r\n        recvWindow = false,\r\n        timeout = 15000,\r\n        disableBeautification = false,\r\n        handleDrift = false\r\n    }) {\r\n        this.key = key;\r\n        this.secret = secret;\r\n        this.recvWindow = recvWindow;\r\n        this.timeout = timeout;\r\n        this.disableBeautification = disableBeautification;\r\n        this.handleDrift = handleDrift;\r\n\r\n        this._beautifier = new Beautifier();\r\n        this._baseUrl = 'https://api.binance.com/';\r\n        this._drift = 0;\r\n        this._syncInterval = 0;\r\n    }\r\n\r\n    _makeRequest(query, callback, route, security, method, attempt = 0) {\r\n        assert(_.isUndefined(callback) || _.isFunction(callback), 'callback must be a function or undefined');\r\n        assert(_.isObject(query), 'query must be an object');\r\n\r\n        let queryString;\r\n        const type = _.last(route.split('/')),\r\n            options = {\r\n                url: `${this._baseUrl}${route}`,\r\n                timeout: this.timeout\r\n            };\r\n\r\n        if (security === 'SIGNED') {\r\n            if (this.recvWindow) {\r\n                query.recvWindow = this.recvWindow;\r\n            }\r\n            queryString = qs.stringify(query);\r\n            options.url += '?' + queryString;\r\n            if (options.url.substr(options.url.length - 1) !== '?') {\r\n                options.url += '&';\r\n            }\r\n            options.url += `signature=${this._sign(queryString)}`;\r\n        } else {\r\n            queryString = qs.stringify(query);\r\n            if (queryString) {\r\n                options.url += '?' + queryString;\r\n            }\r\n        }\r\n        if (security === 'API-KEY' || security === 'SIGNED') {\r\n            options.headers = { 'X-MBX-APIKEY': this.key };\r\n        }\r\n        if (method) {\r\n            options.method = method;\r\n        }\r\n\r\n        if (callback) {\r\n            request(options, (err, response, body) => {\r\n                let payload;\r\n                try {\r\n                    payload = JSON.parse(body);\r\n                } catch (e) {\r\n                    payload = body;\r\n                }\r\n                if (err) {\r\n                    callback(err, payload);\r\n                } else if (response.statusCode < 200 || response.statusCode > 299) {\r\n                    /*\r\n                     * If we get a response that the timestamp is ahead of the server,\r\n                     * calculate the drift and then attempt the request again\r\n                     */\r\n                    if (response.statusCode === 400 && payload.code === -1021 &&\r\n                        this.handleDrift && attempt === 0) {\r\n\r\n                        this.calculateDrift()\r\n                            .then(() => {\r\n                                query.timestamp = this._getTime() + this._drift;\r\n                                return this._makeRequest(query, callback, route, security, method,\r\n                                    ++attempt);\r\n                            });\r\n                    } else {\r\n                        callback(new Error(`Response code ${response.statusCode}`), payload);\r\n                    }\r\n                } else {\r\n                    if (_.isArray(payload)) {\r\n                        payload = _.map(payload, (item) => {\r\n                            return this._doBeautifications(item, type);\r\n                        });\r\n                    } else {\r\n                        payload = this._doBeautifications(payload);\r\n                    }\r\n                    callback(err, payload);\r\n                }\r\n            });\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                request(options, (err, response, body) => {\r\n                    let payload;\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        try {\r\n                            payload = JSON.parse(body);\r\n                        } catch (e) {\r\n                            payload = body;\r\n                        }\r\n\r\n                        if (response.statusCode < 200 || response.statusCode > 299) {\r\n                            /*\r\n                             * If we get a response that the timestamp is ahead of the server,\r\n                             * calculate the drift and then attempt the request again\r\n                             */\r\n                            if (response.statusCode === 400 && payload.code === -1021 &&\r\n                                this.handleDrift && attempt === 0) {\r\n\r\n                                this.calculateDrift()\r\n                                    .then(() => {\r\n                                        query.timestamp = this._getTime() + this._drift;\r\n                                        return this._makeRequest(query, callback, route, security,\r\n                                            method, ++attempt);\r\n                                    })\r\n                                    .then(retryPayload => {\r\n                                        resolve(retryPayload);\r\n                                    })\r\n                                    .catch(retryErr => {\r\n                                        reject(retryErr);\r\n                                    });\r\n                            } else {\r\n                                reject(payload);\r\n                            }\r\n                        } else {\r\n                            if (_.isArray(payload)) {\r\n                                payload = _.map(payload, (item) => {\r\n                                    return this._doBeautifications(item, type);\r\n                                });\r\n                            } else {\r\n                                payload = this._doBeautifications(payload);\r\n                            }\r\n                            resolve(payload);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    _doBeautifications(response, route) {\r\n        if (this.disableBeautification) {\r\n            return response;\r\n        }\r\n        return this._beautifier.beautify(response, route);\r\n    }\r\n\r\n    _sign(queryString) {\r\n        return crypto.createHmac('sha256', this.secret)\r\n            .update(queryString)\r\n            .digest('hex');\r\n    }\r\n\r\n    _setTimestamp(query) {\r\n        if (!query.timestamp) {\r\n            query.timestamp = this._getTime() + this._drift;\r\n        }\r\n    }\r\n\r\n    _getTime() {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    calculateDrift() {\r\n        const systemTime = this._getTime();\r\n        return this.time()\r\n            .then((response) => {\r\n                // Calculate the approximate trip time from here to binance\r\n                const transitTime = parseInt((this._getTime() - systemTime) / 2);\r\n                this._drift = response.serverTime - (systemTime + transitTime);\r\n            });\r\n    }\r\n\r\n    startTimeSync(interval = 300000) {\r\n        // If there's already an interval running, clear it and reset values\r\n        if (this._syncInterval !== 0) {\r\n            this.endTimeSync();\r\n        }\r\n\r\n        // Calculate initial drift value and setup interval to periodically update it\r\n        this.calculateDrift();\r\n        this._syncInterval = setInterval(() => {\r\n            this.calculateDrift();\r\n        }, interval);\r\n    }\r\n\r\n    endTimeSync() {\r\n        clearInterval(this._syncInterval);\r\n        this._drift = 0;\r\n        this._syncInterval = 0;\r\n    }\r\n\r\n    // Public APIs\r\n    ping(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/ping');\r\n    }\r\n\r\n    time(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/time');\r\n    }\r\n\r\n    depth(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v1/depth');\r\n    }\r\n\r\n    trades(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v1/trades');\r\n    }\r\n\r\n    historicalTrades(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v1/historicalTrades', 'API-KEY');\r\n    }\r\n\r\n    aggTrades(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v1/aggTrades');\r\n    }\r\n\r\n    exchangeInfo(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/exchangeInfo');\r\n    }\r\n\r\n    klines(query = {}, callback) {\r\n        return this._makeRequest(query, callback, 'api/v1/klines');\r\n    }\r\n\r\n    ticker24hr(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v1/ticker/24hr');\r\n    }\r\n\r\n    tickerPrice(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v3/ticker/price');\r\n    }\r\n\r\n    bookTicker(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n\r\n        return this._makeRequest(query, callback, 'api/v3/ticker/bookTicker');\r\n    }\r\n\r\n    allBookTickers(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/ticker/allBookTickers');\r\n    }\r\n\r\n    allPrices(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/ticker/allPrices');\r\n    }\r\n\r\n    // Private APIs\r\n    newOrder(query = {}, callback) {\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED', 'POST');\r\n    }\r\n\r\n    testOrder(query = {}, callback) {\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/order/test', 'SIGNED', 'POST');\r\n    }\r\n\r\n    queryOrder(query = {}, callback) {\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED');\r\n    }\r\n\r\n    cancelOrder(query = {}, callback) {\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/order', 'SIGNED', 'DELETE');\r\n    }\r\n\r\n    openOrders(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/openOrders', 'SIGNED');\r\n    }\r\n\r\n    allOrders(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/allOrders', 'SIGNED');\r\n    }\r\n\r\n    account(query = {}, callback) {\r\n        if (_.isFunction(query)) {\r\n            callback = query;\r\n            query = {};\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/account', 'SIGNED');\r\n    }\r\n\r\n    myTrades(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { symbol: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'api/v3/myTrades', 'SIGNED');\r\n    }\r\n\r\n    withdraw(query = {}, callback) {\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'wapi/v3/withdraw.html', 'SIGNED', 'POST');\r\n    }\r\n\r\n    depositHistory(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { asset: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'wapi/v3/depositHistory.html', 'SIGNED');\r\n    }\r\n\r\n    withdrawHistory(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { asset: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'wapi/v3/withdrawHistory.html', 'SIGNED');\r\n    }\r\n\r\n    depositAddress(query = {}, callback) {\r\n        if (_.isString(query)) {\r\n            query = { asset: query };\r\n        }\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'wapi/v3/depositAddress.html', 'SIGNED');\r\n    }\r\n\r\n    accountStatus(callback) {\r\n        const query = {};\r\n        this._setTimestamp(query);\r\n        return this._makeRequest(query, callback, 'wapi/v3/accountStatus.html', 'SIGNED');\r\n    }\r\n\r\n    startUserDataStream(callback) {\r\n        return this._makeRequest({}, callback, 'api/v1/userDataStream', 'API-KEY', 'POST');\r\n    }\r\n\r\n    keepAliveUserDataStream(query = {}, callback) {\r\n        return this._makeRequest(query, callback, 'api/v1/userDataStream', 'API-KEY', 'PUT');\r\n    }\r\n\r\n    closeUserDataStream(query = {}, callback) {\r\n        return this._makeRequest(query, callback, 'api/v1/userDataStream', 'API-KEY', 'DELETE');\r\n    }\r\n}\r\n\r\nmodule.exports = BinanceRest;\r\n"]},"metadata":{},"sourceType":"script"}