{"ast":null,"code":"import _slicedToArray from\"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import settingsStore,{settingsActions}from\"./Store/Settings\";import coins from\"./config/coins\";var TopBar=function TopBar(){return React.createElement(React.Fragment,null,React.createElement(SearchForCoin,null));};var SearchForCoin=function SearchForCoin(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var handleSearchChange=function handleSearchChange(event){setSearchValue(event.target.value);};var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),predictions=_useState4[0],setPredictions=_useState4[1];useEffect(function(){setPredictions([]);var lowerCaseSearchValue=searchValue.toLowerCase();var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{var _loop=function _loop(){var coin=_step.value;if((coin.name.toLowerCase().startsWith(lowerCaseSearchValue)||coin.symbol.toLowerCase().startsWith(lowerCaseSearchValue))&&searchValue!==\"\"){setPredictions(function(predictions){if(predictions.length<5){predictions.push(coin);}return predictions;});}};for(var _iterator=coins[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){_loop();}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}},[searchValue]);var predictionElements=predictions.map(function(prediction,index){return React.createElement(Prediction,{name:prediction.name,symbol:prediction.symbol,key:index});});var _useState5=useState(\"0px\"),_useState6=_slicedToArray(_useState5,2),predictionStyleWidth=_useState6[0],setPredictionStyleWidth=_useState6[1];useEffect(function(){// on mount initialise the width of prediction div to be the same as the input search\nvar width=document.getElementById(\"search_for_coin_input\").getBoundingClientRect().width+\"px\";setPredictionStyleWidth(width);},[]);var predictionStyle={width:predictionStyleWidth,position:\"fixed\",border:\"1px solid #D8D8D8\",borderRadius:\"10px\",textAlign:\"left\",zIndex:20,overflow:\"hidden\",backgroundColor:\"white\"};var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showPredictions=_useState8[0],setShowPredictions=_useState8[1];var handlePredictionSelect=function handlePredictionSelect(){setShowPredictions(false);setSearchValue(\"\");};return React.createElement(React.Fragment,null,React.createElement(\"div\",null,React.createElement(\"input\",{id:\"search_for_coin_input\",placeholder:\"Search for coin\",value:searchValue,onChange:handleSearchChange,onClick:function onClick(){return setShowPredictions(true);}}),predictions.length>0&&showPredictions&&React.createElement(\"div\",{style:predictionStyle,onClick:handlePredictionSelect},predictionElements)));};var Prediction=function Prediction(props){var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isHover=_useState10[0],setIsHover=_useState10[1];var toggleHoverExit=function toggleHoverExit(){setIsHover(false);};var toggleHoverEnter=function toggleHoverEnter(){setIsHover(true);};var handleSelect=function handleSelect(){settingsStore.dispatch({type:settingsActions.UPDATE_COIN,coin:props.symbol});};var mouseOutClassName=isHover?\"\":\"prediction_mouse_out\";return React.createElement(\"div\",{className:\"search_prediction \"+mouseOutClassName,onMouseEnter:toggleHoverEnter,onMouseLeave:toggleHoverExit,onClick:handleSelect},props.name,\" (\",props.symbol,\")\");};export default TopBar;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/TopBar.js"],"names":["React","useEffect","useState","settingsStore","settingsActions","coins","TopBar","SearchForCoin","searchValue","setSearchValue","handleSearchChange","event","target","value","predictions","setPredictions","lowerCaseSearchValue","toLowerCase","coin","name","startsWith","symbol","length","push","predictionElements","map","prediction","index","predictionStyleWidth","setPredictionStyleWidth","width","document","getElementById","getBoundingClientRect","predictionStyle","position","border","borderRadius","textAlign","zIndex","overflow","backgroundColor","showPredictions","setShowPredictions","handlePredictionSelect","Prediction","props","isHover","setIsHover","toggleHoverExit","toggleHoverEnter","handleSelect","dispatch","type","UPDATE_COIN","mouseOutClassName"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport settingsStore, {settingsActions} from \"./Store/Settings\";\nimport coins from \"./config/coins\";\n\nconst TopBar = () => {\n    return (\n        <React.Fragment>\n            <SearchForCoin/>\n        </React.Fragment>\n    );\n};\n\nconst SearchForCoin = () => {\n    const [searchValue, setSearchValue] = useState(\"\");\n    const handleSearchChange = event => {\n        setSearchValue(event.target.value);\n    };\n\n    const [predictions, setPredictions] = useState([]);\n    useEffect(() => {\n        setPredictions([]);\n        const lowerCaseSearchValue = searchValue.toLowerCase();\n        for (const coin of coins) {\n            if ((coin.name.toLowerCase().startsWith(lowerCaseSearchValue)\n                    || coin.symbol.toLowerCase().startsWith(lowerCaseSearchValue))\n                        && searchValue !== \"\") {\n                setPredictions(predictions => {\n                    if (predictions.length < 5) { predictions.push(coin); }\n                    return predictions;\n                });\n            }\n        }\n    }, [searchValue]);\n\n    const predictionElements = predictions.map((prediction, index) =>\n        <Prediction name={prediction.name} symbol={prediction.symbol} key={index}/>\n    );\n\n    const [predictionStyleWidth, setPredictionStyleWidth] = useState(\"0px\");\n    useEffect(() => { // on mount initialise the width of prediction div to be the same as the input search\n        const width = document.getElementById(\"search_for_coin_input\").getBoundingClientRect().width + \"px\";\n        setPredictionStyleWidth(width);\n    }, []);\n\n    const predictionStyle = {\n        width: predictionStyleWidth,\n        position: \"fixed\",\n        border: \"1px solid #D8D8D8\",\n        borderRadius: \"10px\",\n        textAlign: \"left\",\n        zIndex: 20,\n        overflow: \"hidden\",\n        backgroundColor: \"white\"\n    };\n\n    const [showPredictions, setShowPredictions] = useState(false);\n    const handlePredictionSelect = () => {\n      setShowPredictions(false);\n      setSearchValue(\"\");\n    };\n\n    return (\n        <React.Fragment>\n            <div>\n                <input id=\"search_for_coin_input\" placeholder=\"Search for coin\"\n                       value={searchValue} onChange={handleSearchChange} onClick={() => setShowPredictions(true)}/>\n                {\n                    predictions.length > 0 && showPredictions &&\n                        <div style={predictionStyle} onClick={handlePredictionSelect}>\n                            {predictionElements}\n                        </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst Prediction = props => {\n    const [isHover, setIsHover] = useState(true);\n\n    const toggleHoverExit = () => {\n        setIsHover(false);\n    };\n\n    const toggleHoverEnter = () => {\n        setIsHover(true);\n    };\n\n    const handleSelect = () => {\n        settingsStore.dispatch({\n            type: settingsActions.UPDATE_COIN,\n            coin: props.symbol\n        });\n    };\n\n    const mouseOutClassName = isHover ? \"\" : \"prediction_mouse_out\";\n\n    return (\n        <div className={\"search_prediction \" + mouseOutClassName}\n             onMouseEnter={toggleHoverEnter} onMouseLeave={toggleHoverExit}\n             onClick={handleSelect}>\n            {props.name} ({props.symbol})\n        </div>\n    )\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}