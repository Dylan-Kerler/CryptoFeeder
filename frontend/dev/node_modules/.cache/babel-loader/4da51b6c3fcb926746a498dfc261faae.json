{"ast":null,"code":"const WebSocket = require('ws');\n\nconst Beautifier = require('./beautifier.js');\n\nconst _ = require('underscore');\n\nclass BinanceWS {\n  constructor(beautify = true) {\n    this._baseUrl = 'wss://stream.binance.com:9443/ws/';\n    this._combinedBaseUrl = 'wss://stream.binance.com:9443/stream?streams=';\n    this._sockets = {};\n    this._beautifier = new Beautifier();\n    this._beautify = beautify;\n    this.streams = {\n      depth: symbol => `${symbol.toLowerCase()}@depth`,\n      depthLevel: (symbol, level) => `${symbol.toLowerCase()}@depth${level}`,\n      kline: (symbol, interval) => `${symbol.toLowerCase()}@kline_${interval}`,\n      aggTrade: symbol => `${symbol.toLowerCase()}@aggTrade`,\n      trade: symbol => `${symbol.toLowerCase()}@trade`,\n      ticker: symbol => `${symbol.toLowerCase()}@ticker`,\n      allTickers: () => '!ticker@arr'\n    };\n  }\n\n  _setupWebSocket(eventHandler, path, isCombined) {\n    if (this._sockets[path]) {\n      return this._sockets[path];\n    }\n\n    path = (isCombined ? this._combinedBaseUrl : this._baseUrl) + path;\n    const ws = new WebSocket(path);\n    ws.on('message', message => {\n      let event;\n\n      try {\n        event = JSON.parse(message);\n      } catch (e) {\n        event = message;\n      }\n\n      if (this._beautify) {\n        if (event.stream) {\n          event.data = this._beautifyResponse(event.data);\n        } else {\n          event = this._beautifyResponse(event);\n        }\n      }\n\n      eventHandler(event);\n    });\n    ws.on('error', () => {// node.js EventEmitters will throw and then exit if no error listener is registered\n    });\n    return ws;\n  }\n\n  _beautifyResponse(data) {\n    if (_.isArray(data)) {\n      return _.map(data, event => {\n        if (event.e) {\n          return this._beautifier.beautify(event, event.e + 'Event');\n        }\n\n        return event;\n      });\n    } else if (data.e) {\n      return this._beautifier.beautify(data, data.e + 'Event');\n    }\n\n    return data;\n  }\n\n  onDepthUpdate(symbol, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.depth(symbol));\n  }\n\n  onDepthLevelUpdate(symbol, level, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.depthLevel(symbol, level));\n  }\n\n  onKline(symbol, interval, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.kline(symbol, interval));\n  }\n\n  onAggTrade(symbol, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.aggTrade(symbol));\n  }\n\n  onTrade(symbol, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.trade(symbol));\n  }\n\n  onTicker(symbol, eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.ticker(symbol));\n  }\n\n  onAllTickers(eventHandler) {\n    return this._setupWebSocket(eventHandler, this.streams.allTickers());\n  }\n\n  onUserData(binanceRest, eventHandler, interval = 60000) {\n    return binanceRest.startUserDataStream().then(response => {\n      setInterval(() => {\n        binanceRest.keepAliveUserDataStream(response);\n      }, interval);\n      return this._setupWebSocket(eventHandler, response.listenKey);\n    });\n  }\n\n  onCombinedStream(streams, eventHandler) {\n    return this._setupWebSocket(eventHandler, streams.join('/'), true);\n  }\n\n}\n\nmodule.exports = BinanceWS;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/binance/lib/ws.js"],"names":["WebSocket","require","Beautifier","_","BinanceWS","constructor","beautify","_baseUrl","_combinedBaseUrl","_sockets","_beautifier","_beautify","streams","depth","symbol","toLowerCase","depthLevel","level","kline","interval","aggTrade","trade","ticker","allTickers","_setupWebSocket","eventHandler","path","isCombined","ws","on","message","event","JSON","parse","e","stream","data","_beautifyResponse","isArray","map","onDepthUpdate","onDepthLevelUpdate","onKline","onAggTrade","onTrade","onTicker","onAllTickers","onUserData","binanceRest","startUserDataStream","then","response","setInterval","keepAliveUserDataStream","listenKey","onCombinedStream","join","module","exports"],"mappings":"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","sourcesContent":["const WebSocket = require('ws');\r\nconst Beautifier = require('./beautifier.js');\r\nconst _ = require('underscore');\r\n\r\nclass BinanceWS {\r\n\r\n    constructor(beautify = true) {\r\n        this._baseUrl = 'wss://stream.binance.com:9443/ws/';\r\n        this._combinedBaseUrl = 'wss://stream.binance.com:9443/stream?streams=';\r\n        this._sockets = {};\r\n        this._beautifier = new Beautifier();\r\n        this._beautify = beautify;\r\n\r\n        this.streams = {\r\n            depth: (symbol) => `${symbol.toLowerCase()}@depth`,\r\n            depthLevel: (symbol, level) => `${symbol.toLowerCase()}@depth${level}`,\r\n            kline: (symbol, interval) => `${symbol.toLowerCase()}@kline_${interval}`,\r\n            aggTrade: (symbol) => `${symbol.toLowerCase()}@aggTrade`,\r\n            trade: (symbol) => `${symbol.toLowerCase()}@trade`,\r\n            ticker: (symbol) => `${symbol.toLowerCase()}@ticker`,\r\n            allTickers: () => '!ticker@arr'\r\n        };\r\n    }\r\n\r\n    _setupWebSocket(eventHandler, path, isCombined) {\r\n        if (this._sockets[path]) {\r\n            return this._sockets[path];\r\n        }\r\n        path = (isCombined ? this._combinedBaseUrl : this._baseUrl) + path;\r\n        const ws = new WebSocket(path);\r\n\r\n        ws.on('message', (message) => {\r\n            let event;\r\n            try {\r\n                event = JSON.parse(message);\r\n            } catch (e) {\r\n                event = message;\r\n            }\r\n            if (this._beautify) {\r\n                if (event.stream) {\r\n                    event.data = this._beautifyResponse(event.data);\r\n                } else {\r\n                    event = this._beautifyResponse(event);\r\n                }\r\n            }\r\n\r\n            eventHandler(event);\r\n        });\r\n\r\n        ws.on('error', () => {\r\n            // node.js EventEmitters will throw and then exit if no error listener is registered\r\n        });\r\n\r\n        return ws;\r\n    }\r\n\r\n    _beautifyResponse(data) {\r\n        if (_.isArray(data)) {\r\n            return _.map(data, event => {\r\n                if (event.e) {\r\n                    return this._beautifier.beautify(event, event.e + 'Event');\r\n                }\r\n                return event;\r\n            });\r\n        } else if (data.e) {\r\n            return this._beautifier.beautify(data, data.e + 'Event');\r\n        }\r\n        return data;\r\n    }\r\n\r\n    onDepthUpdate(symbol, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.depth(symbol));\r\n    }\r\n\r\n    onDepthLevelUpdate(symbol, level, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.depthLevel(symbol, level));\r\n    }\r\n\r\n    onKline(symbol, interval, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.kline(symbol, interval));\r\n    }\r\n\r\n    onAggTrade(symbol, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.aggTrade(symbol));\r\n    }\r\n\r\n    onTrade(symbol, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.trade(symbol));\r\n    }\r\n\r\n    onTicker(symbol, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.ticker(symbol));\r\n    }\r\n\r\n    onAllTickers(eventHandler) {\r\n        return this._setupWebSocket(eventHandler, this.streams.allTickers());\r\n    }\r\n\r\n    onUserData(binanceRest, eventHandler, interval = 60000) {\r\n        return binanceRest.startUserDataStream()\r\n            .then((response) => {\r\n                setInterval(() => {\r\n                    binanceRest.keepAliveUserDataStream(response);\r\n                }, interval);\r\n                return this._setupWebSocket(eventHandler, response.listenKey);\r\n            });\r\n    }\r\n\r\n    onCombinedStream(streams, eventHandler) {\r\n        return this._setupWebSocket(eventHandler, streams.join('/'), true);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = BinanceWS;\r\n"]},"metadata":{},"sourceType":"script"}