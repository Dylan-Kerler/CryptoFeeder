{"ast":null,"code":"const _ = require('underscore');\n\nclass Beautifier {\n  constructor() {\n    this._beautifications = {\n      aggTrades: {\n        a: 'aggTradeId',\n        p: 'price',\n        q: 'quantity',\n        f: 'firstTradeId',\n        l: 'lastTradeId',\n        T: 'timestamp',\n        m: 'maker',\n        M: 'bestPriceMatch'\n      },\n      klines: {\n        0: 'openTime',\n        1: 'open',\n        2: 'high',\n        3: 'low',\n        4: 'close',\n        5: 'volume',\n        6: 'closeTime',\n        7: 'quoteAssetVolume',\n        8: 'trades',\n        9: 'takerBaseAssetVolume',\n        10: 'takerQuoteAssetVolume',\n        11: 'ignored'\n      },\n      bids: [{\n        0: 'price',\n        1: 'quantity',\n        2: 'ignored'\n      }],\n      asks: [{\n        0: 'price',\n        1: 'quantity',\n        2: 'ignored'\n      }],\n      depthUpdateEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        U: 'firstUpdateId',\n        u: 'lastUpdateId',\n        b: 'bidDepthDelta',\n        a: 'askDepthDelta'\n      },\n      bidDepthDelta: [{\n        0: 'price',\n        1: 'quantity',\n        2: 'ignored'\n      }],\n      askDepthDelta: [{\n        0: 'price',\n        1: 'quantity',\n        2: 'ignored'\n      }],\n      klineEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        k: 'kline'\n      },\n      kline: {\n        t: 'startTime',\n        T: 'endTime',\n        s: 'symbol',\n        i: 'interval',\n        f: 'firstTradeId',\n        L: 'lastTradeId',\n        o: 'open',\n        c: 'close',\n        h: 'high',\n        l: 'low',\n        v: 'volume',\n        n: 'trades',\n        x: 'final',\n        q: 'quoteVolume',\n        V: 'volumeActive',\n        Q: 'quoteVolumeActive',\n        B: 'ignored'\n      },\n      aggTradeEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        a: 'tradeId',\n        p: 'price',\n        q: 'quantity',\n        f: 'firstTradeId',\n        l: 'lastTradeId',\n        T: 'time',\n        m: 'maker',\n        M: 'ignored'\n      },\n      outboundAccountInfoEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        m: 'makerCommission',\n        t: 'takerCommission',\n        b: 'buyerCommission',\n        s: 'sellerCommission',\n        T: 'canTrade',\n        W: 'canWithdraw',\n        D: 'canDeposit',\n        B: 'balances',\n        u: 'lastUpdateTime'\n      },\n      balances: [{\n        a: 'asset',\n        f: 'availableBalance',\n        l: 'onOrderBalance'\n      }],\n      executionReportEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        c: 'newClientOrderId',\n        S: 'side',\n        o: 'orderType',\n        f: 'cancelType',\n        // GTC 'Good till Cancel', IOC: 'Immediate or Cancel'\n        q: 'quantity',\n        p: 'price',\n        P: 'stopPrice',\n        F: 'icebergQuantity',\n        C: 'originalClientOrderId',\n        x: 'executionType',\n        X: 'orderStatus',\n        r: 'rejectReason',\n        i: 'orderId',\n        l: 'lastTradeQuantity',\n        z: 'accumulatedQuantity',\n        L: 'lastTradePrice',\n        n: 'commission',\n        N: 'commissionAsset',\n        m: 'maker',\n        T: 'tradeTime',\n        t: 'tradeId'\n      },\n      tradeEvent: {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        t: 'tradeId',\n        p: 'price',\n        q: 'quantity',\n        b: 'buyerOrderId',\n        a: 'sellerOrderId',\n        T: 'time',\n        m: 'maker',\n        M: 'ignored'\n      },\n      '24hrTickerEvent': {\n        e: 'eventType',\n        E: 'eventTime',\n        s: 'symbol',\n        p: 'priceChange',\n        P: 'priceChangePercent',\n        w: 'weightedAveragePrice',\n        x: 'previousClose',\n        c: 'currentClose',\n        Q: 'closeQuantity',\n        b: 'bestBid',\n        B: 'bestBidQuantity',\n        a: 'bestAskPrice',\n        A: 'bestAskQuantity',\n        o: 'open',\n        h: 'high',\n        l: 'low',\n        v: 'baseAssetVolume',\n        q: 'quoteAssetVolume',\n        O: 'openTime',\n        C: 'closeTime',\n        F: 'firstTradeId',\n        L: 'lastTradeId',\n        n: 'trades'\n      }\n    };\n  }\n\n  beautify(object, type) {\n    const beautifications = _.isObject(type) ? type : this._beautifications[type];\n\n    if (!beautifications) {\n      return object;\n    }\n\n    let newItem = {};\n\n    _.each(object, (value, key) => {\n      const newKey = beautifications[key] || key;\n\n      if (_.isArray(value)) {\n        const newArray = [];\n\n        if (_.isArray(this._beautifications[beautifications[key]])) {\n          _.each(value, arrayValue => {\n            newArray.push(this.beautify(arrayValue, this._beautifications[beautifications[key]][0]));\n          });\n        } else {\n          _.each(value, (arrayValue, arrayKey) => {\n            newItem.push(this.beautify(value, beautifications[arrayKey]));\n          });\n        }\n\n        newItem[newKey] = newArray;\n      } else if (_.isObject(value)) {\n        newItem[newKey] = this.beautify(value, beautifications[key]);\n      } else {\n        newItem[newKey] = value;\n      }\n    });\n\n    return newItem;\n  }\n\n}\n\nmodule.exports = Beautifier;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/binance/lib/beautifier.js"],"names":["_","require","Beautifier","constructor","_beautifications","aggTrades","a","p","q","f","l","T","m","M","klines","bids","asks","depthUpdateEvent","e","E","s","U","u","b","bidDepthDelta","askDepthDelta","klineEvent","k","kline","t","i","L","o","c","h","v","n","x","V","Q","B","aggTradeEvent","outboundAccountInfoEvent","W","D","balances","executionReportEvent","S","P","F","C","X","r","z","N","tradeEvent","w","A","O","beautify","object","type","beautifications","isObject","newItem","each","value","key","newKey","isArray","newArray","arrayValue","push","arrayKey","module","exports"],"mappings":"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","sourcesContent":["const _ = require('underscore');\r\n\r\nclass Beautifier {\r\n\r\n    constructor() {\r\n        this._beautifications = {\r\n            aggTrades: {\r\n                a: 'aggTradeId',\r\n                p: 'price',\r\n                q: 'quantity',\r\n                f: 'firstTradeId',\r\n                l: 'lastTradeId',\r\n                T: 'timestamp',\r\n                m: 'maker',\r\n                M: 'bestPriceMatch'\r\n            },\r\n            klines: {\r\n                0: 'openTime',\r\n                1: 'open',\r\n                2: 'high',\r\n                3: 'low',\r\n                4: 'close',\r\n                5: 'volume',\r\n                6: 'closeTime',\r\n                7: 'quoteAssetVolume',\r\n                8: 'trades',\r\n                9: 'takerBaseAssetVolume',\r\n                10: 'takerQuoteAssetVolume',\r\n                11: 'ignored'\r\n            },\r\n            bids: [\r\n                {\r\n                    0: 'price',\r\n                    1: 'quantity',\r\n                    2: 'ignored'\r\n                }\r\n            ],\r\n            asks: [\r\n                {\r\n                    0: 'price',\r\n                    1: 'quantity',\r\n                    2: 'ignored'\r\n                }\r\n            ],\r\n            depthUpdateEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                U: 'firstUpdateId',\r\n                u: 'lastUpdateId',\r\n                b: 'bidDepthDelta',\r\n                a: 'askDepthDelta'\r\n            },\r\n            bidDepthDelta: [\r\n                {\r\n                    0: 'price',\r\n                    1: 'quantity',\r\n                    2: 'ignored'\r\n                }\r\n            ],\r\n            askDepthDelta: [\r\n                {\r\n                    0: 'price',\r\n                    1: 'quantity',\r\n                    2: 'ignored'\r\n                }\r\n            ],\r\n            klineEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                k: 'kline'\r\n            },\r\n            kline: {\r\n                t: 'startTime',\r\n                T: 'endTime',\r\n                s: 'symbol',\r\n                i: 'interval',\r\n                f: 'firstTradeId',\r\n                L: 'lastTradeId',\r\n                o: 'open',\r\n                c: 'close',\r\n                h: 'high',\r\n                l: 'low',\r\n                v: 'volume',\r\n                n: 'trades',\r\n                x: 'final',\r\n                q: 'quoteVolume',\r\n                V: 'volumeActive',\r\n                Q: 'quoteVolumeActive',\r\n                B: 'ignored'\r\n            },\r\n            aggTradeEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                a: 'tradeId',\r\n                p: 'price',\r\n                q: 'quantity',\r\n                f: 'firstTradeId',\r\n                l: 'lastTradeId',\r\n                T: 'time',\r\n                m: 'maker',\r\n                M: 'ignored'\r\n            },\r\n            outboundAccountInfoEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                m: 'makerCommission',\r\n                t: 'takerCommission',\r\n                b: 'buyerCommission',\r\n                s: 'sellerCommission',\r\n                T: 'canTrade',\r\n                W: 'canWithdraw',\r\n                D: 'canDeposit',\r\n                B: 'balances',\r\n                u: 'lastUpdateTime'\r\n            },\r\n            balances: [\r\n                {\r\n                    a: 'asset',\r\n                    f: 'availableBalance',\r\n                    l: 'onOrderBalance'\r\n                }\r\n            ],\r\n            executionReportEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                c: 'newClientOrderId',\r\n                S: 'side',\r\n                o: 'orderType',\r\n                f: 'cancelType', // GTC 'Good till Cancel', IOC: 'Immediate or Cancel'\r\n                q: 'quantity',\r\n                p: 'price',\r\n                P: 'stopPrice',\r\n                F: 'icebergQuantity',\r\n                C: 'originalClientOrderId',\r\n                x: 'executionType',\r\n                X: 'orderStatus',\r\n                r: 'rejectReason',\r\n                i: 'orderId',\r\n                l: 'lastTradeQuantity',\r\n                z: 'accumulatedQuantity',\r\n                L: 'lastTradePrice',\r\n                n: 'commission',\r\n                N: 'commissionAsset',\r\n                m: 'maker',\r\n                T: 'tradeTime',\r\n                t: 'tradeId'\r\n            },\r\n            tradeEvent: {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                t: 'tradeId',\r\n                p: 'price',\r\n                q: 'quantity',\r\n                b: 'buyerOrderId',\r\n                a: 'sellerOrderId',\r\n                T: 'time',\r\n                m: 'maker',\r\n                M: 'ignored'\r\n            },\r\n            '24hrTickerEvent': {\r\n                e: 'eventType',\r\n                E: 'eventTime',\r\n                s: 'symbol',\r\n                p: 'priceChange',\r\n                P: 'priceChangePercent',\r\n                w: 'weightedAveragePrice',\r\n                x: 'previousClose',\r\n                c: 'currentClose',\r\n                Q: 'closeQuantity',\r\n                b: 'bestBid',\r\n                B: 'bestBidQuantity',\r\n                a: 'bestAskPrice',\r\n                A: 'bestAskQuantity',\r\n                o: 'open',\r\n                h: 'high',\r\n                l: 'low',\r\n                v: 'baseAssetVolume',\r\n                q: 'quoteAssetVolume',\r\n                O: 'openTime',\r\n                C: 'closeTime',\r\n                F: 'firstTradeId',\r\n                L: 'lastTradeId',\r\n                n: 'trades'\r\n            }\r\n        };\r\n    }\r\n\r\n    beautify(object, type) {\r\n        const beautifications = _.isObject(type) ? type : this._beautifications[type];\r\n        if (!beautifications) {\r\n            return object;\r\n        }\r\n        let newItem = {};\r\n        _.each(object, (value, key) => {\r\n            const newKey = beautifications[key] || key;\r\n            if (_.isArray(value)) {\r\n                const newArray = [];\r\n                if (_.isArray(this._beautifications[beautifications[key]])) {\r\n                    _.each(value, arrayValue => {\r\n                        newArray.push(this.beautify(\r\n                            arrayValue,\r\n                            this._beautifications[beautifications[key]][0]\r\n                        ));\r\n                    });\r\n                } else {\r\n                    _.each(value, (arrayValue, arrayKey) => {\r\n                        newItem.push(this.beautify(value, beautifications[arrayKey]));\r\n                    });\r\n                }\r\n                newItem[newKey] = newArray;\r\n            } else if (_.isObject(value)) {\r\n                newItem[newKey] = this.beautify(value, beautifications[key]);\r\n            } else {\r\n                newItem[newKey] = value;\r\n            }\r\n        });\r\n        return newItem;\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Beautifier;\r\n"]},"metadata":{},"sourceType":"script"}