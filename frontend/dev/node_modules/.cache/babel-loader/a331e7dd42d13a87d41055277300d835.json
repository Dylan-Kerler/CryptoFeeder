{"ast":null,"code":"import _slicedToArray from \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/TopBar.js\";\nimport React, { useEffect, useState } from \"react\";\nimport priceStore from \"./Store/Price\";\n\nconst TopBar = () => {\n  const _useState = useState(priceStore.getState()[\"BTCUSDT\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        btcPrice = _useState2[0],\n        setBtcPrice = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isBuy = _useState4[0],\n        setIsBuy = _useState4[1];\n\n  useEffect(() => {\n    priceStore.subscribe(() => {\n      setBtcPrice(prevBtcPrice => {\n        const newPrice = priceStore.getState()[\"BTCUSDT\"];\n        console.log(\"New: \", newPrice, \"prev: \", prevBtcPrice);\n        setIsBuy(newPrice > prevBtcPrice);\n        console.log(isBuy);\n        return newPrice;\n      });\n    });\n  }, []);\n  const priceColour = isBuy ? \"#26A83A\" : \"red\";\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"search_for_coin_input\",\n    placeholder: \"Search for coin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"top_bar_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Want access to more data? Sign up for free!\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Sign up and get access to all of these features and more!\"), React.createElement(\"p\", {\n    id: \"btcPriceFeed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"BTCUSDT: \", React.createElement(\"b\", {\n    style: {\n      color: priceColour\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"$\", btcPrice)));\n};\n\nexport default TopBar;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/TopBar.js"],"names":["React","useEffect","useState","priceStore","TopBar","getState","btcPrice","setBtcPrice","isBuy","setIsBuy","subscribe","prevBtcPrice","newPrice","console","log","priceColour","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACeF,QAAQ,CAACC,UAAU,CAACE,QAAX,GAAsB,SAAtB,CAAD,CADvB;AAAA;AAAA,QACVC,QADU;AAAA,QACAC,WADA;;AAAA,qBAESL,QAAQ,CAAC,IAAD,CAFjB;AAAA;AAAA,QAEVM,KAFU;AAAA,QAEHC,QAFG;;AAIjBR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU,CAACO,SAAX,CAAqB,MAAM;AACvBH,MAAAA,WAAW,CAACI,YAAY,IAAI;AACxB,cAAMC,QAAQ,GAAGT,UAAU,CAACE,QAAX,GAAsB,SAAtB,CAAjB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAArB,EAA+B,QAA/B,EAAyCD,YAAzC;AACAF,QAAAA,QAAQ,CAACG,QAAQ,GAAGD,YAAZ,CAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,eAAOI,QAAP;AACH,OANU,CAAX;AAOH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMG,WAAW,GAAGP,KAAK,GAAG,SAAH,GAAe,KAAxC;AACA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,uBAAV;AAAkC,IAAA,WAAW,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEQ;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhE,8DAFR,EAGI;AAAG,IAAA,EAAE,EAAE,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC;AAAG,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAED;AAAR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCT,QAAlC,CAAhC,CAHJ,CADJ;AAOH,CAxBD;;AA0BA,eAAeF,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport priceStore from \"./Store/Price\";\n\n\nconst TopBar = () => {\n    const [btcPrice, setBtcPrice] = useState(priceStore.getState()[\"BTCUSDT\"]);\n    const [isBuy, setIsBuy] = useState(true);\n\n    useEffect(() => {\n        priceStore.subscribe(() => {\n            setBtcPrice(prevBtcPrice => {\n                const newPrice = priceStore.getState()[\"BTCUSDT\"];\n                console.log(\"New: \", newPrice, \"prev: \", prevBtcPrice);\n                setIsBuy(newPrice > prevBtcPrice);\n                console.log(isBuy);\n                return newPrice;\n            });\n        });\n    }, []);\n\n    const priceColour = isBuy ? \"#26A83A\" : \"red\";\n    return (\n        <React.Fragment>\n            <input id=\"search_for_coin_input\" placeholder=\"Search for coin\"/>\n                <p id=\"top_bar_text\">Want access to more data? Sign up for free!<br/>Sign up and get access to all of these features and more!</p>\n            <p id={\"btcPriceFeed\"}>BTCUSDT: <b style={{color: priceColour}}>${btcPrice}</b></p>\n        </React.Fragment>\n    );\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}