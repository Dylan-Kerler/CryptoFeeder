{"ast":null,"code":"import _slicedToArray from \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/TopBar.js\";\nimport React, { useEffect, useState } from \"react\";\nimport priceStore from \"./Store/Price\";\n\nconst TopBar = () => {\n  const _useState = useState(priceStore.getState()[\"BTCUSDT\"]),\n        _useState2 = _slicedToArray(_useState, 2),\n        btcPrice = _useState2[0],\n        setBtcPrice = _useState2[1];\n\n  useEffect(() => {\n    priceStore.subscribe(() => {\n      priceStore.getState();\n    });\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"search_for_coin_input\",\n    placeholder: \"Search for coin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"top_bar_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Want access to more data? Sign up for free!\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), \"Sign up and get access to all of these features and more!\"), React.createElement(\"p\", {\n    id: \"btcPriceFeed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"BTCUSDT: \", priceStore.getState()));\n};\n\nexport default TopBar;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/TopBar.js"],"names":["React","useEffect","useState","priceStore","TopBar","getState","btcPrice","setBtcPrice","subscribe"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACeF,QAAQ,CAACC,UAAU,CAACE,QAAX,GAAsB,SAAtB,CAAD,CADvB;AAAA;AAAA,QACVC,QADU;AAAA,QACAC,WADA;;AAEjBN,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU,CAACK,SAAX,CAAqB,MAAM;AACvBL,MAAAA,UAAU,CAACE,QAAX;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,uBAAV;AAAkC,IAAA,WAAW,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEQ;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhE,8DAFR,EAGQ;AAAG,IAAA,EAAE,EAAE,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiCF,UAAU,CAACE,QAAX,EAAjC,CAHR,CADJ;AAOH,CAfD;;AAiBA,eAAeD,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport priceStore from \"./Store/Price\";\n\n\nconst TopBar = () => {\n    const [btcPrice, setBtcPrice] = useState(priceStore.getState()[\"BTCUSDT\"]);\n    useEffect(() => {\n        priceStore.subscribe(() => {\n            priceStore.getState();\n        })\n    }, []);\n\n    return (\n        <React.Fragment>\n            <input id=\"search_for_coin_input\" placeholder=\"Search for coin\"/>\n                <p id=\"top_bar_text\">Want access to more data? Sign up for free!<br/>Sign up and get access to all of these features and more!</p>\n                <p id={\"btcPriceFeed\"}>BTCUSDT: {priceStore.getState()}</p>\n        </React.Fragment>\n    );\n};\n\nexport default TopBar;"]},"metadata":{},"sourceType":"module"}