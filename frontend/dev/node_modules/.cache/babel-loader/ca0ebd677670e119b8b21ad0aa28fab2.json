{"ast":null,"code":"import _slicedToArray from \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/Sliders.js\";\nimport React, { useState } from \"react\";\nimport settingsStore from \"./Store/Settings\"; // Need to handle slider change and to put the state of this into a redux store\n\nconst Slider = props => {\n  const _useState = useState(props.defaultValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        sliderValue = _useState2[0],\n        setSliderValue = _useState2[1];\n\n  const handleSliderChange = event => {\n    // update the redux settings store\n    setSliderValue(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    id: `min_${props.dataType}_slider_div`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Minimum \", props.dataType === \"liquidity\" ? \"order size\" : props.dataType, \": \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"some value\")), React.createElement(\"input\", {\n    type: \"range\",\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    id: \"test\",\n    onChange: handleSliderChange,\n    value: sliderValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    className: \"min_value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, `${props.minText}`), React.createElement(\"strong\", {\n    className: \"max_value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, `${props.maxText}`)));\n};\n\nconst Sliders = () => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    dataType: \"volume\",\n    min: \"0\",\n    max: \"1000000\",\n    step: \"1\",\n    minText: \"$0\",\n    maxText: \"$5,000,000\",\n    defaultValue: \"50000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    dataType: \"price\",\n    min: \"0\",\n    max: \"300\",\n    step: \"1\",\n    minText: \"0%\",\n    maxText: \"300%\",\n    defaultValue: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    dataType: \"liquidity\",\n    min: \"0\",\n    max: \"3000000\",\n    step: \"1\",\n    minText: \"0%\",\n    maxText: \"$3,000,000\",\n    defaultValue: \"1500000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default Sliders;","map":{"version":3,"sources":["/home/levi/Desktop/WebProjects/CryptoFeeder/frontend/dev/src/ReactComponents/Sliders.js"],"names":["React","useState","settingsStore","Slider","props","defaultValue","sliderValue","setSliderValue","handleSliderChange","event","target","value","dataType","min","max","step","minText","maxText","Sliders"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAEA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA,oBACgBH,QAAQ,CAACG,KAAK,CAACC,YAAP,CADxB;AAAA;AAAA,QACfC,WADe;AAAA,QACFC,cADE;;AAGtB,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC;AACAF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,EAAE,EAAG,OAAMP,KAAK,CAACQ,QAAS,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaR,KAAK,CAACQ,QAAN,KAAmB,WAAnB,GAAiC,YAAjC,GAAgDR,KAAK,CAACQ,QAAnE,QAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA/E,CADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAER,KAAK,CAACS,GAA/B;AAAoC,IAAA,GAAG,EAAET,KAAK,CAACU,GAA/C;AAAoD,IAAA,IAAI,EAAEV,KAAK,CAACW,IAAhE;AAAsE,IAAA,EAAE,EAAC,MAAzE;AAAgF,IAAA,QAAQ,EAAEP,kBAA1F;AAA8G,IAAA,KAAK,EAAEF,WAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC,GAAEF,KAAK,CAACY,OAAQ,EAAhD,CADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC,GAAEZ,KAAK,CAACa,OAAQ,EAAhD,CAFJ,CAHJ,CADJ;AAUH,CAlBD;;AAoBA,MAAMC,OAAO,GAAG,MAAM;AAElB,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,QAAlB;AAA4B,IAAA,GAAG,EAAE,GAAjC;AAAsC,IAAA,GAAG,EAAE,SAA3C;AAAsD,IAAA,IAAI,EAAE,GAA5D;AAAkE,IAAA,OAAO,EAAE,IAA3E;AAAiF,IAAA,OAAO,EAAE,YAA1F;AAAwG,IAAA,YAAY,EAAE,OAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,OAAlB;AAA2B,IAAA,GAAG,EAAE,GAAhC;AAAqC,IAAA,GAAG,EAAE,KAA1C;AAAiD,IAAA,IAAI,EAAE,GAAvD;AAA4D,IAAA,OAAO,EAAE,IAArE;AAA2E,IAAA,OAAO,EAAE,MAApF;AAA4F,IAAA,YAAY,EAAE,GAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,WAAlB;AAA+B,IAAA,GAAG,EAAE,GAApC;AAAyC,IAAA,GAAG,EAAE,SAA9C;AAAyD,IAAA,IAAI,EAAE,GAA/D;AAAoE,IAAA,OAAO,EAAE,IAA7E;AAAmF,IAAA,OAAO,EAAE,YAA5F;AAA0G,IAAA,YAAY,EAAE,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CAVD;;AAYA,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\nimport settingsStore from \"./Store/Settings\";\n\n// Need to handle slider change and to put the state of this into a redux store\nconst Slider = (props) => {\n    const [sliderValue, setSliderValue] = useState(props.defaultValue);\n\n    const handleSliderChange = (event) => {\n        // update the redux settings store\n        setSliderValue(event.target.value);\n    };\n\n    return (\n        <div id={`min_${props.dataType}_slider_div`}>\n            <h2>Minimum {props.dataType === \"liquidity\" ? \"order size\" : props.dataType }: <b>some value</b></h2>\n            <input type=\"range\" min={props.min} max={props.max} step={props.step} id=\"test\" onChange={handleSliderChange} value={sliderValue}/>\n            <div>\n                <strong className=\"min_value\">{`${props.minText}`}</strong>\n                <strong className=\"max_value\">{`${props.maxText}`}</strong>\n            </div>\n        </div>\n    )\n};\n\nconst Sliders = () => {\n\n    return (\n        <React.Fragment>\n            <Slider dataType={\"volume\"} min={\"0\"} max={\"1000000\"} step={\"1\"}  minText={\"$0\"} maxText={\"$5,000,000\"} defaultValue={\"50000\"}/>\n            <Slider dataType={\"price\"} min={\"0\"} max={\"300\"} step={\"1\"} minText={\"0%\"} maxText={\"300%\"} defaultValue={\"5\"}/>\n            <Slider dataType={\"liquidity\"} min={\"0\"} max={\"3000000\"} step={\"1\"} minText={\"0%\"} maxText={\"$3,000,000\"} defaultValue={\"1500000\"}/>\n        </React.Fragment>\n\n    )\n};\n\nexport default Sliders;"]},"metadata":{},"sourceType":"module"}